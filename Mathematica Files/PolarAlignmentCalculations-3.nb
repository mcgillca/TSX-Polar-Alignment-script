(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    224643,       4470]
NotebookOptionsPosition[    169111,       3473]
NotebookOutlinePosition[    215444,       4328]
CellTagsIndexPosition[    215401,       4325]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Polar Alignment Calculations", "Title",
 CellChangeTimes->{{3.8203812904361963`*^9, 3.820381327622046*^9}, {
  3.8204849591121798`*^9, 3.820484963752399*^9}, {3.82557708220638*^9, 
  3.825577104109509*^9}},ExpressionUUID->"42a92a96-1e2f-4aec-8c75-\
2c8f43210c80"],

Cell[CellGroupData[{

Cell["Problem Statement", "Section",
 CellChangeTimes->{{3.820381341399246*^9, 3.820381348735961*^9}, {
  3.8204857190410357`*^9, 3.820485724993979*^9}, {3.825577112336219*^9, 
  3.825577116197999*^9}},ExpressionUUID->"b99182b9-81f5-4488-9035-\
d0acc2d526fe"],

Cell["\<\
Wish to polar align a telescope. Assume that the polar axis of the scope is \
pointed at Dec = Dpa, and Ha = Hpa. Now consider taking an image at some \
location in the sky p1 = (H1, D1), then rotating the scope by an angle \
\[Theta] around this axis and taking a new image found to be at location p2 = \
 (H2, D2). We wish to solve for Dpa and Hpa.

We will create an axis system with Z pointing at the North Celestial Pole, \
and Y aligned with the meridian, and X perpendicular to the two axes.\
\>", "Text",
 CellChangeTimes->{{3.820393197811647*^9, 3.820393254254056*^9}, {
  3.820484977905397*^9, 3.820485008074442*^9}, {3.82048504529228*^9, 
  3.820485065555402*^9}, {3.8255771225689583`*^9, 3.825577621374261*^9}, {
  3.825578049223867*^9, 3.825578054999753*^9}, {3.825578230312602*^9, 
  3.825578245551189*^9}},ExpressionUUID->"12a24928-93c8-4319-b8db-\
e5643c40fe9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  GraphicsBox[{
    CircleBox[{-0.08084097968207382, 
     0.0184216817220052}, {0.5365105447121865, 0.5365105447121867}], 
    PointBox[{-0.1579754299587668, -0.1148156060112846}], InsetBox[
     StyleBox[Cell["Telescope Axis",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,ExpressionUUID->
       "a285fabf-cb12-43a7-8152-e1cf5c5d58a7"],
      Background->GrayLevel[
       1.]], {0.051285129123264106, 0.04704903496636281}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[Cell["Real Polar Axis",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "26d3b431-a38a-48b7-aa19-3d2ee2bee3a2"], \
{-0.015568118625216787, -0.13859032524956594}, {Left, Baseline},
     Alignment->{Left, Top}], 
    DiskBox[{0.3051957872178823, 0.37774573432074665`}, 0.05063831831626575], 
    DiskBox[{-0.39381968180338456`, 
     0.4361234876844621}, {0.05063831831626553, 0.05063831831626575}], 
    {AbsoluteThickness[0.5], CapForm[Square], EdgeForm[{AbsoluteThickness[
     0.5], CapForm[Square]}], EdgeForm[None], 
     ArrowBox[{{0.37448459201388906`, 
      0.5170192294650608}, {-0.2653835720486106, 0.7551324632432728}}]}, 
    InsetBox[
     StyleBox[Cell["Rotation \[Theta] from P1 to P2 about telescope Axis",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,ExpressionUUID->
       "94ed8cf9-75bc-4230-90ae-c5f5177fc71a"],
      Background->GrayLevel[
       1.]], {0.00027957492404651063, 0.7702395968967016}, {
     Left, Baseline}, {0.6100428263346358, 0.19926715426974828}, {{1., 0.}, {
     0., 1.}},
     Alignment->{Left, Top}], 
    {FaceForm[RGBColor[0.635279, 0.617105, 0]], 
     DiskBox[{-0.06631016201442863, 
      0.04661992390950531}, {0.04721471998426652, 0.04982248942057299}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{-0.0016302848021051124`, 
      0.5639628808515127}, {-0.13511404293017742`, -0.5416971422696978}}]}, 
    InsetBox[Cell["\<\
Telescope Axis must be equidistant from P1 and P2 so on great circle mid-way \
between P1 and P2.\
\>",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "773f410f-4789-4012-928f-ba48a7c52011"], \
{-0.5285676744249084, -0.5964036729600695}, {
     Left, Top}, {0.9553207397460938, 0.2964786105685764}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell["P1",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,ExpressionUUID->
       "a495e7fc-791e-4021-a66e-c0fb03236606"],
      Background->GrayLevel[1.]], {0.3872504340277789, 0.4341436598036025}, {
     Left, Top}, {0.08104909261067701, 0.17777777777777778}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell["P2",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,ExpressionUUID->
       "675bd4ab-47b3-4129-a088-8a65329b0295"],
      Background->GrayLevel[1.]], {-0.6147069295247387, 0.5458365546332469}, {
     Left, Top}, {0.09739761352539063, 0.17777777777777778}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], 
    ArrowBox[{{0.668949897772195, 0.3383229352093311}, {-0.8351650800033585, 
     0.48361980946658784`}}]},
   DefaultBaseStyle->{"CanvasGraphics"},
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{386.67665100097656`, Automatic},
   PlotRange->{{-1., 1.}, {-1., 1.}},
   PlotRangePadding->Automatic], 
  TemplateBox[{
    TemplateBox[{""}, "CanvasFrame"]},
   "Canvas"], 
  GraphicsBox[{
    CircleBox[{-0.1624170950743692, -0.11635719512936926`}, \
{0.5365105447121865, 0.536510544712187}], 
    PointBox[{-0.1579754299587668, -0.1148156060112846}], InsetBox[
     StyleBox[Cell["Telescope Axis",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,ExpressionUUID->
       "4c752624-a285-4dd2-a257-c8173e6ea138"],
      Background->GrayLevel[
       1.]], {0.051285129123264106, 0.04704903496636281}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[Cell["Real Polar Axis",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "4b80ab7c-0738-43e8-9670-486f416a494b"], \
{-0.015568118625216787, -0.13859032524956594}, {Left, Baseline},
     Alignment->{Left, Top}], 
    DiskBox[{0.3051957872178823, 0.37774573432074665`}, 0.05063831831626575], 
    DiskBox[{-0.39381968180338456`, 
     0.4361234876844621}, {0.05063831831626553, 0.05063831831626575}], 
    {AbsoluteThickness[0.5], CapForm[Square], EdgeForm[{AbsoluteThickness[
     0.5], CapForm[Square]}], EdgeForm[None], 
     ArrowBox[{{0.37448459201388906`, 
      0.5170192294650608}, {-0.2653835720486106, 0.7551324632432728}}]}, 
    InsetBox[
     StyleBox[Cell[
      "Rotation \[ExponentialE] from P1 to P2 about telescope Axis",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,ExpressionUUID->
       "e84a8d36-a805-4591-8fc6-35c18f99437d"],
      Background->GrayLevel[
       1.]], {0.0002795749240469547, 0.7702395968967016}, {
     Left, Baseline}, {0.6100428263346358, 0.19926715426974828}, {{1., 0.}, {
     0., 1.}},
     Alignment->{Left, Top}], 
    {FaceForm[RGBColor[0.635279, 0.617105, 0]], 
     DiskBox[{-0.05230863777968353, 
      0.05243534549836926}, {0.04721471998426641, 0.04982248942057299}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{-0.0005021078207354567, 
      0.564547766627124}, {-0.12844044154884793`, -0.7204131810872474}}]}, 
    InsetBox[Cell["\<\
Location must be so that angle between P2 \[Rule] A \[Rule] P1 must be \
\[ExponentialE].\
\>",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "29909766-717d-4cf7-a2ef-ae9d08262ded"], \
{-0.033051452468767506, -0.6464870923158934}, {
     Left, Top}, {0.9553207397460938, 0.2964786105685764}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell["P1",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,ExpressionUUID->
       "ec3bd320-a69b-4613-b2ad-58ae1f6f4aae"],
      Background->GrayLevel[1.]], {0.38725043402777937, 0.4341436598036025}, {
     Left, Top}, {0.08104909261067701, 0.17777777777777778}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], InsetBox[
     StyleBox[Cell["P2",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,ExpressionUUID->
       "47fcdb07-8298-4661-a032-4fda41f51152"],
      Background->GrayLevel[1.]], {-0.6147069295247387, 0.5458365546332469}, {
     Left, Top}, {0.09739761352539063, 0.17777777777777778}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], 
    ArrowBox[{{0.668949897772195, 0.3383229352093311}, {-0.8351650800033585, 
     0.48361980946658784`}}], 
    {Thickness[0.008061851645415683], AbsoluteDashing[None], StrokeForm[Hue[
     0., 1, 0.95]], EdgeForm[{Hue[0., 1, 0.95], Thickness[
     0.008061851645415683], AbsoluteDashing[None]}], 
     LineBox[{{-0.5626374414733674, 0.6041925492125663}, {
      0.08390334948473954, -0.0877093193660089}}]}, 
    {Thickness[0.008061851645415683], AbsoluteDashing[None], StrokeForm[Hue[
     0.548, 1, 0.95]], EdgeForm[Hue[0.548, 1, 0.95]], 
     LineBox[{{0.46727155178939994`, 
      0.5273765554455598}, {-0.22404456835966174`, -0.11056723899389231`}}]}, 
    InsetBox[
     StyleBox[Cell["A",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,ExpressionUUID->
       "3da371d5-1076-493a-9434-73874d6f4af1"],
      Background->GrayLevel[
       1.]], {-0.17759837785131427, 0.09987528848944527}, {
     Left, Top}, {0.08104909261067701, 0.17777777777777778}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], 
    {Thickness[0.008061851645415683], AbsoluteDashing[None], StrokeForm[Hue[
     0., 1, 0.95]], EdgeForm[RGBColor[0., 0., 0.]], EdgeForm[None], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQfUCwu+fZsVX2HYGyDhtbjtgzfFr2OvvFIvsPfhoh
9d3H7R9I7j9a6rvI/ofLors2m47bL3C8Pr9+00I4n6FOJ/Dph2Z7i//f52cf
PGHPUHXbOcOoDs534FBclPp2+v6GpY6lonKn7BUMtae7bd2/n4PtIc+7zjP2
M/r4ryYwHsDgMwikNxskI/g/JN/+LLJB8F8oFxdsFUXwH+j+fPb93Wk4/4Z5
fazVCQT/giPrlZqFCP4J726v/VWn7Re0dMbJaRzYvyN+urmLLoK/IVN2XRsb
gr+ieLHKyfun4PwFtZqzuXci+DPa1wv6TTplv6KK+cVtP0z+hImmHROyEfyO
2bv/XXI5Zb+joLZwZimCfyDt+6+wOQfg4XUiprBF5DAmv2L98dfh30/aXwh6
zXvpJYJ/wyN1er/AQTj/gd19BV9zBP+FSeQqrjgE/4PWZeMTLQj+DwXfva2r
EXwG8eNuzpcQfA5exwsMPxF8AebdkfvkD8H5Ej9NHle7IfgK79flWObi5gMA
3rZYGQ==
      "]]}, 
    {Thickness[0.008061851645415683], AbsoluteDashing[None], StrokeForm[Hue[
     0., 1, 0.95]], EdgeForm[{Hue[0., 1., 0.9499961852445258], Opacity[1.], 
     Thickness[0.008061851645415683], AbsoluteDashing[None]}], EdgeForm[None],
      ArrowBox[{{-0.14184155385286767`, 
      0.2057370039612505}, {-0.1914965806133957, 0.17972730696180217`}}]}, 
    InsetBox[
     StyleBox[Cell[TextData[StyleBox["\[ExponentialE]",
       FontSize->19]],
       GeneratedCell->False,
       CellAutoOverwrite->False,
       CellBaseline->Baseline,
       TextAlignment->Left,ExpressionUUID->
       "da80bc95-9ef6-47ef-a6f6-39a6f22618b3"],
      Background->GrayLevel[
       1.]], {-0.05201327748708118, 0.2568415256379908}, {Left, Baseline},
     Alignment->{Left, Top}]},
   DefaultBaseStyle->{"CanvasGraphics"},
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{386.67665100097656`, Automatic},
   PlotRange->{{-1., 1.}, {-1., 1.}},
   PlotRangePadding->Automatic]}]], "Input",
 CellChangeTimes->{
  3.826792479343254*^9, {3.826792565356679*^9, 3.826792700684647*^9}, {
   3.826792735884201*^9, 3.826792822314492*^9}, {3.826793105455666*^9, 
   3.826793106819139*^9}, {3.826793453887643*^9, 3.826793473051066*^9}, {
   3.826793506680087*^9, 3.826793512377022*^9}, {3.826793595549781*^9, 
   3.826793619998322*^9}, 3.826793667964402*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"3c1dcc09-971f-4a3e-884c-1116a03d8edc"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{
    TemplateBox[{
      GraphicsBox[{}, {
       DefaultBaseStyle -> {"CanvasGraphics"}, 
        PlotRange -> {{-1., 1.}, {-1., 1.}}, 
        PlotRangePadding -> {{0., 0.}, {0., 0.}}, ImageSize -> Medium, 
        PlotRange -> 1}]}, "CanvasFrame"]},
   "Canvas"], " ", 
  GraphicsBox[{
    CircleBox[{-0.08084097968207382, 
     0.0184216817220052}, {0.5365105447121865, 0.5365105447121867}], 
    PointBox[{-0.1579754299587668, -0.1148156060112846}], 
    InsetBox[Cell["Telescope Axis",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "84f1215e-c7be-428f-8283-86e79f45dd9c"], \
{0.051285129123264106, 0.04704903496636281}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[Cell["Real Polar Axis",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "38a07286-d728-401c-b1ac-3f93130ca20b"], \
{-0.015568118625216787, -0.13859032524956594}, {Left, Baseline},
     Alignment->{Left, Top}], 
    DiskBox[{0.3051957872178823, 0.37774573432074665`}, 0.05063831831626575], 
    DiskBox[{-0.39381968180338456`, 
     0.4361234876844621}, {0.05063831831626553, 0.05063831831626575}], 
    {AbsoluteThickness[0.5], CapForm[Square], EdgeForm[{AbsoluteThickness[
     0.5], CapForm[Square]}], EdgeForm[None], 
     ArrowBox[{{0.37448459201388906`, 
      0.5170192294650608}, {-0.2653835720486106, 0.7551324632432728}}]}, 
    InsetBox[Cell["Rotation \[Theta] from P1 to P2 about telescope Axis",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "e3c93084-dde2-4037-b0f8-f80ee19b2c5d"], \
{0.00027957492404651063, 0.7702395968967016}, {
     Left, Baseline}, {0.6100428263346358, 0.19926715426974828}, {{1., 0.}, {
     0., 1.}},
     Alignment->{Left, Top}], 
    {FaceForm[RGBColor[0.635279, 0.617105, 0]], 
     DiskBox[{-0.06631016201442863, 
      0.04661992390950531}, {0.04721471998426652, 0.04982248942057299}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{-0.0016302848021051124`, 
      0.5639628808515127}, {-0.13511404293017742`, -0.5416971422696978}}]}, 
    InsetBox[Cell["\<\
Telescope Axis must be equidistant from P1 and P2 so on great circle mid-way \
between P1 and P2.\
\>",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "568bd1e2-0c75-4f7a-ae78-45a3d41139dd"], \
{-0.5285676744249084, -0.5964036729600695}, {
     Left, Top}, {0.9553207397460938, 0.2964786105685764}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], InsetBox[Cell["P1",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "a2098942-338d-4521-89de-afd46ce4f261"], \
{0.3872504340277789, 0.4341436598036025}, {
     Left, Top}, {0.08104909261067701, 0.17777777777777778}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], InsetBox[Cell["P2",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "5f25acd5-3fda-4f24-b7b6-65f2f7f71cc5"], \
{-0.6147069295247387, 0.5458365546332469}, {
     Left, Top}, {0.09739761352539063, 0.17777777777777778}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], 
    ArrowBox[{{0.668949897772195, 0.3383229352093311}, {-0.8351650800033585, 
     0.48361980946658784`}}]},
   DefaultBaseStyle->{"CanvasGraphics"},
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{386.67665100097656`, Automatic},
   PlotRange->{{-1., 1.}, {-1., 1.}},
   PlotRangePadding->Automatic], " ", 
  GraphicsBox[{
    CircleBox[{-0.1624170950743692, -0.11635719512936926`}, \
{0.5365105447121865, 0.536510544712187}], 
    PointBox[{-0.1579754299587668, -0.1148156060112846}], 
    InsetBox[Cell["Telescope Axis",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "0574fc2c-51ff-465d-9890-fbd30b85efe9"], \
{0.051285129123264106, 0.04704903496636281}, {Left, Baseline},
     Alignment->{Left, Top}], InsetBox[Cell["Real Polar Axis",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "436269ca-0072-446a-9a96-2c81ff5c2872"], \
{-0.015568118625216787, -0.13859032524956594}, {Left, Baseline},
     Alignment->{Left, Top}], 
    DiskBox[{0.3051957872178823, 0.37774573432074665`}, 0.05063831831626575], 
    DiskBox[{-0.39381968180338456`, 
     0.4361234876844621}, {0.05063831831626553, 0.05063831831626575}], 
    {AbsoluteThickness[0.5], CapForm[Square], EdgeForm[{AbsoluteThickness[
     0.5], CapForm[Square]}], EdgeForm[None], 
     ArrowBox[{{0.37448459201388906`, 
      0.5170192294650608}, {-0.2653835720486106, 0.7551324632432728}}]}, 
    InsetBox[Cell[
     "Rotation \[ExponentialE] from P1 to P2 about telescope Axis",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "dd38083d-cd8c-4025-b8f7-b35e5fd9d096"], \
{0.0002795749240469547, 0.7702395968967016}, {
     Left, Baseline}, {0.6100428263346358, 0.19926715426974828}, {{1., 0.}, {
     0., 1.}},
     Alignment->{Left, Top}], 
    {FaceForm[RGBColor[0.635279, 0.617105, 0]], 
     DiskBox[{-0.05230863777968353, 
      0.05243534549836926}, {0.04721471998426641, 0.04982248942057299}]}, 
    {AbsoluteThickness[1], StrokeForm[{GrayLevel[0.], Opacity[1.]}], 
     EdgeForm[{GrayLevel[0.], Opacity[1.]}], EdgeForm[None], 
     LineBox[{{-0.0005021078207354567, 
      0.564547766627124}, {-0.12844044154884793`, -0.7204131810872474}}]}, 
    InsetBox[Cell["\<\
Location must be so that angle between P2 \[Rule] A \[Rule] P1 must be \
\[ExponentialE].\
\>",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "66e9223c-a35e-4023-9148-9560af2afbd0"], \
{-0.033051452468767506, -0.6464870923158934}, {
     Left, Top}, {0.9553207397460938, 0.2964786105685764}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], InsetBox[Cell["P1",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "92be288a-8ec5-447d-8759-46430baf686e"], \
{0.38725043402777937, 0.4341436598036025}, {
     Left, Top}, {0.08104909261067701, 0.17777777777777778}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], InsetBox[Cell["P2",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "64a90e3d-cf0d-41e4-9b2d-6cfbe4846c8b"], \
{-0.6147069295247387, 0.5458365546332469}, {
     Left, Top}, {0.09739761352539063, 0.17777777777777778}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], 
    ArrowBox[{{0.668949897772195, 0.3383229352093311}, {-0.8351650800033585, 
     0.48361980946658784`}}], 
    {Thickness[0.008061851645415683], AbsoluteDashing[None], StrokeForm[Hue[
     0., 1, 0.95]], EdgeForm[{Hue[0., 1, 0.95], Thickness[
     0.008061851645415683], AbsoluteDashing[None]}], 
     LineBox[{{-0.5626374414733674, 0.6041925492125663}, {
      0.08390334948473954, -0.0877093193660089}}]}, 
    {Thickness[0.008061851645415683], AbsoluteDashing[None], StrokeForm[Hue[
     0.548, 1, 0.95]], EdgeForm[Hue[0.548, 1, 0.95]], 
     LineBox[{{0.46727155178939994`, 
      0.5273765554455598}, {-0.22404456835966174`, -0.11056723899389231`}}]}, 
    InsetBox[Cell["A",
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "e8212b27-1114-4557-a7b3-31a1b81ad05b"], \
{-0.17759837785131427, 0.09987528848944527}, {
     Left, Top}, {0.08104909261067701, 0.17777777777777778}, {{1., 0.}, {0., 
     1.}},
     Alignment->{Left, Top}], 
    {Thickness[0.008061851645415683], AbsoluteDashing[None], StrokeForm[Hue[
     0., 1, 0.95]], EdgeForm[RGBColor[0., 0., 0.]], EdgeForm[None], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQfUCwu+fZsVX2HYGyDhtbjtgzfFr2OvvFIvsPfhoh
9d3H7R9I7j9a6rvI/ofLors2m47bL3C8Pr9+00I4n6FOJ/Dph2Z7i//f52cf
PGHPUHXbOcOoDs534FBclPp2+v6GpY6lonKn7BUMtae7bd2/n4PtIc+7zjP2
M/r4ryYwHsDgMwikNxskI/g/JN/+LLJB8F8oFxdsFUXwH+j+fPb93Wk4/4Z5
fazVCQT/giPrlZqFCP4J726v/VWn7Re0dMbJaRzYvyN+urmLLoK/IVN2XRsb
gr+ieLHKyfun4PwFtZqzuXci+DPa1wv6TTplv6KK+cVtP0z+hImmHROyEfyO
2bv/XXI5Zb+joLZwZimCfyDt+6+wOQfg4XUiprBF5DAmv2L98dfh30/aXwh6
zXvpJYJ/wyN1er/AQTj/gd19BV9zBP+FSeQqrjgE/4PWZeMTLQj+DwXfva2r
EXwG8eNuzpcQfA5exwsMPxF8AebdkfvkD8H5Ej9NHle7IfgK79flWObi5gMA
3rZYGQ==
      "]]}, 
    {Thickness[0.008061851645415683], AbsoluteDashing[None], StrokeForm[Hue[
     0., 1, 0.95]], EdgeForm[{Hue[0., 1., 0.9499961852445258], Opacity[1.], 
     Thickness[0.008061851645415683], AbsoluteDashing[None]}], EdgeForm[None],
      ArrowBox[{{-0.14184155385286767`, 
      0.2057370039612505}, {-0.1914965806133957, 0.17972730696180217`}}]}, 
    InsetBox[Cell[TextData[StyleBox["\[ExponentialE]",
      FontSize->19]],
      GeneratedCell->False,
      CellAutoOverwrite->False,
      CellBaseline->Baseline,
      TextAlignment->Left,ExpressionUUID->
      "db0abc62-cbdb-46b6-83d1-1f08731951eb"], \
{-0.05201327748708118, 0.2568415256379908}, {Left, Baseline},
     Alignment->{Left, Top}]},
   DefaultBaseStyle->{"CanvasGraphics"},
   ImagePadding->{{0., 0.}, {0., 0.}},
   ImageSize->{386.67665100097656`, Automatic},
   PlotRange->{{-1., 1.}, {-1., 1.}},
   PlotRangePadding->Automatic]}]], "Output",
 CellChangeTimes->{3.9183891702130747`*^9, 3.91844927167208*^9, 
  3.919750238704858*^9, 3.920521802433715*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"35225d48-d9fc-4e6b-9180-e3021a2fac68"]
}, Open  ]],

Cell["\<\
So process: from platesolved RA and DEC, calculate HA from LST. Use this to \
work out 3D vectors for P1 and P2 and work out the vector P1 -> P2. This \
direction defines the great circle plane that contains the telescope axis. \
Then search for a location on the great circle plane so that the angle \
between the two points is the rotation between the two positions AS MEASURED \
BY THE TELESECOPE.

We will create an axis system with Z pointing at the North Celestial Pole, \
and Y aligned with the meridian, and X perpendicular to the two axes.\
\>", "Text",
 CellChangeTimes->{{3.820393197811647*^9, 3.820393254254056*^9}, {
  3.820484977905397*^9, 3.820485008074442*^9}, {3.82048504529228*^9, 
  3.820485065555402*^9}, {3.8255771225689583`*^9, 3.825577621374261*^9}, {
  3.825578049223867*^9, 3.825578054999753*^9}, {3.825578230312602*^9, 
  3.825578245551189*^9}, {3.8267936948100433`*^9, 
  3.826793908553356*^9}},ExpressionUUID->"8c66bf35-d09e-4d0f-ba1c-\
3c8b164630cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clear data and set up vectors for the polar axis, P1 and P2", "Section",
 CellChangeTimes->{{3.820391837718657*^9, 3.82039184587871*^9}, {
  3.825577653350162*^9, 3.825577665981476*^9}, {3.825577725017065*^9, 
  3.825577731666431*^9}, {3.825577843150955*^9, 
  3.82557785751161*^9}},ExpressionUUID->"6581fe96-27e5-4f3d-81b8-\
c2e7585c0920"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pa", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "Dpa", "]"}], " ", 
      RowBox[{"Sin", "[", "Hpa", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Cos", "[", "Dpa", "]"}], " ", 
      RowBox[{"Cos", "[", "Hpa", "]"}]}], ",", " ", 
     RowBox[{"Sin", "[", "Dpa", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "D1", "]"}], " ", 
      RowBox[{"Sin", "[", "H1", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Cos", "[", "D1", "]"}], " ", 
      RowBox[{"Cos", "[", "H1", "]"}]}], ",", " ", 
     RowBox[{"Sin", "[", "D1", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", " ", "=", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "D2", "]"}], " ", 
      RowBox[{"Sin", "[", "H2", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Cos", "[", "D2", "]"}], " ", 
      RowBox[{"Cos", "[", "H2", "]"}]}], ",", " ", 
     RowBox[{"Sin", "[", "D2", "]"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.820381351764716*^9, 3.8203815862965612`*^9}, {
   3.820381624327785*^9, 3.82038174809343*^9}, {3.820381797407638*^9, 
   3.820381881692437*^9}, {3.820387152796467*^9, 3.820387165238151*^9}, {
   3.8203873512366858`*^9, 3.820387408320067*^9}, {3.820387495647073*^9, 
   3.8203875214125757`*^9}, {3.82038770480949*^9, 3.820387741922263*^9}, {
   3.820387951568737*^9, 3.820387951920569*^9}, {3.820389133255259*^9, 
   3.820389134385247*^9}, {3.820389405270295*^9, 3.820389421451013*^9}, {
   3.820389453271839*^9, 3.820389509134069*^9}, {3.8203895458601513`*^9, 
   3.820389590400997*^9}, {3.820389621117324*^9, 3.820389644422509*^9}, {
   3.82038971705105*^9, 3.820389758761923*^9}, {3.820389797528429*^9, 
   3.82038988014179*^9}, 3.820389910230795*^9, {3.820389973386321*^9, 
   3.820390215900978*^9}, {3.820390260670621*^9, 3.8203902643713303`*^9}, {
   3.820390352993402*^9, 3.820390358333053*^9}, {3.82039042146026*^9, 
   3.8203904236671267`*^9}, {3.820390458148628*^9, 3.820390471024761*^9}, {
   3.820390516400536*^9, 3.820390549139337*^9}, {3.820391280242268*^9, 
   3.820391298308566*^9}, {3.820391795822151*^9, 3.820391801697204*^9}, {
   3.820406209376163*^9, 3.8204062135884027`*^9}, 3.820406253891794*^9, {
   3.820485345869856*^9, 3.8204854152926073`*^9}, {3.8204854600649757`*^9, 
   3.82048546142942*^9}, {3.8204855078692904`*^9, 3.820485686448345*^9}, {
   3.825577863037952*^9, 3.825577926364121*^9}, {3.825577997833053*^9, 
   3.8255781641987047`*^9}, {3.8255782000449247`*^9, 3.825578202032798*^9}, {
   3.82662248242728*^9, 3.826622524487507*^9}, {3.8266239211606283`*^9, 
   3.8266239392299957`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"5b041a6d-29ce-4768-b988-3f160ebd2609"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set up rotation matrix to rotate from p1 to p2", "Section",
 CellChangeTimes->{{3.820391837718657*^9, 3.82039184587871*^9}, {
  3.825578210575364*^9, 
  3.8255782614406157`*^9}},ExpressionUUID->"0706f6ba-f7b3-42db-b8f7-\
e0cdd6203688"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rotn", " ", "=", " ", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Theta]", ",", " ", "pa"}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8204857773577423`*^9, 3.820485831119573*^9}, {
   3.820485863304571*^9, 3.8204859382512493`*^9}, {3.820485974559388*^9, 
   3.820486025550562*^9}, {3.820486086101776*^9, 3.820486161810505*^9}, {
   3.820486207156415*^9, 3.820486297311537*^9}, {3.820486379299197*^9, 
   3.82048657089638*^9}, {3.820486625642428*^9, 3.820486628076496*^9}, {
   3.8204867480837793`*^9, 3.8204867892576523`*^9}, {3.820486847829451*^9, 
   3.820486851812193*^9}, {3.820488643885976*^9, 3.82048864530196*^9}, {
   3.8255782694499273`*^9, 3.825578327836315*^9}, {3.825578366886312*^9, 
   3.8255783786877127`*^9}, {3.825578519277866*^9, 3.825578520774768*^9}, 
   3.825578684369915*^9, {3.825578864927371*^9, 3.8255789538667927`*^9}, {
   3.825579055967815*^9, 3.825579056766321*^9}, 3.826620013930579*^9, {
   3.826622610852251*^9, 3.8266226206849613`*^9}, {3.826622721846273*^9, 
   3.826622753406067*^9}, {3.82662396390466*^9, 3.826624043817615*^9}, 
   3.826695698428196*^9, 3.826695847032777*^9, {3.826695921111413*^9, 
   3.826695940357688*^9}, {3.826696026958571*^9, 3.826696051890685*^9}, {
   3.9183890095347548`*^9, 3.918389025487665*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"fbca896f-bf89-479a-8b8d-10024e0b8656"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}], ",", 
         RowBox[{"{", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}], ",", 
         RowBox[{"{", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}]}], "}"}], 
     Short[#, 8]& ], "line" -> 6, "sessionID" -> 27453930263165980080, 
   "byteCount" -> 302128, "size" -> 8, "stored" -> False, "expr" -> 
   Missing["NotStored"], "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.918389026361*^9, 3.9183890627879*^9, 
  3.918389170333074*^9, 3.9184492717896147`*^9, 3.919750238842648*^9, 
  3.920521802663045*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"7fbca1de-ab4b-4e62-a620-e5299e8c1cab"]
}, Open  ]],

Cell["\<\

Format was still too complicated from inbuilt RotationMatrix, so used an \
alternative form below. Tested to make sure both gave same answers for \
numerical angles, so used simpler form below.\
\>", "Text",
 CellChangeTimes->{{3.826620036144122*^9, 3.8266200993082542`*^9}, {
  3.826695777266164*^9, 
  3.826695782521254*^9}},ExpressionUUID->"76b02164-8a04-417b-907d-\
ef92f506929e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Set", " ", "up", " ", "Alernative", " ", "Form", " ", "of", " ", 
  "Matrix"}]], "Section",
 CellChangeTimes->{
  3.826441392043334*^9, {3.826441426265423*^9, 
   3.82644144323429*^9}},ExpressionUUID->"03d426f5-14a3-4d6c-85c1-\
0d11d3f64583"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c1", " ", "=", " ", 
   RowBox[{"pa", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c2", "=", " ", 
   RowBox[{"pa", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c3", " ", "=", " ", 
   RowBox[{"pa", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.82558078834811*^9, 3.825580836915428*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"c15eed5f-74cd-4ff4-9113-6c07029567df"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m1", " ", "=", " ", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m2", " ", "=", "  ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", " ", "-", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c1", " ", "c1"}], ",", " ", 
        RowBox[{"c1", " ", "c2"}], ",", " ", 
        RowBox[{"c1", " ", "c3"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c2", " ", "c1"}], ",", " ", 
        RowBox[{"c2", " ", "c2"}], ",", " ", 
        RowBox[{"c2", " ", "c3"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c3", " ", "c1"}], ",", " ", 
        RowBox[{"c3", " ", "c2"}], ",", " ", 
        RowBox[{"c3", " ", "c3"}]}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m3", " ", "=", " ", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{"-", "c3"}], ",", " ", "c2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"c3", ",", " ", "0", ",", " ", 
        RowBox[{"-", "c1"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "c2"}], ",", " ", "c1", ",", " ", "0"}], "}"}]}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"m", " ", "=", " ", 
  RowBox[{
  "m1", " ", "+", " ", "m2", " ", "+", 
   "m3"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8255808465685587`*^9, 3.82558084807513*^9}, {
   3.825580896363091*^9, 3.825581055225789*^9}, {3.825581086313839*^9, 
   3.825581167679079*^9}, {3.8255811983309298`*^9, 3.825581295342684*^9}, {
   3.8255813455158577`*^9, 3.8255814113190117`*^9}, {3.825581462918107*^9, 
   3.825581467190782*^9}, {3.8264415432807426`*^9, 3.826441576533679*^9}, {
   3.8264416435319138`*^9, 3.826441645667457*^9}, {3.826442651498945*^9, 
   3.826442652920632*^9}, {3.8264427055904007`*^9, 3.8264427215971947`*^9}, {
   3.8264571495372543`*^9, 3.8264571777820387`*^9}, {3.826458211164143*^9, 
   3.82645825178515*^9}, {3.826620146857608*^9, 3.826620203703143*^9}, 
   3.826624155987832*^9, 3.826696521029519*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"15352793-6016-4973-bf31-3003a8569bd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "Dpa", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "Hpa", "]"}], "2"]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "Dpa", "]"}], "2"], " ", 
       RowBox[{"Cos", "[", "Hpa", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "Hpa", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "Dpa", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "Dpa", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "Dpa", "]"}], " ", 
       RowBox[{"Sin", "[", "Hpa", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "Dpa", "]"}], " ", 
       RowBox[{"Cos", "[", "Hpa", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "Dpa", "]"}], "2"], " ", 
       RowBox[{"Cos", "[", "Hpa", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "Hpa", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", "Dpa", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "Dpa", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "Hpa", "]"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}]}], "+", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "Dpa", "]"}], " ", 
       RowBox[{"Cos", "[", "Hpa", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "Dpa", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "Dpa", "]"}], " ", 
       RowBox[{"Sin", "[", "Hpa", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "Dpa", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "Dpa", "]"}], " ", 
       RowBox[{"Sin", "[", "Hpa", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "Dpa", "]"}], " ", 
       RowBox[{"Cos", "[", "Hpa", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "Dpa", "]"}], " ", 
       RowBox[{"Cos", "[", "Hpa", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "Dpa", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "Dpa", "]"}], " ", 
       RowBox[{"Sin", "[", "Hpa", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "Dpa", "]"}], "2"]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.82669652251155*^9, {3.918385718705475*^9, 3.91838572226783*^9}, 
   3.9183890744243097`*^9, 3.918389170363111*^9, 3.918449271824872*^9, 
   3.9197502388753757`*^9, 3.920521802689454*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"73007d80-7bb5-4013-b2a9-b125b158b3a6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Try Solving general problem", "Section",
 CellChangeTimes->{{3.826443068845083*^9, 
  3.826443082137745*^9}},ExpressionUUID->"b432c878-7b96-41c3-8d84-\
2b51dc0dacbe"],

Cell["\<\
Calculate p1 rotated by m and see if we can solve for Hpa and Dpa  when \
rotated p1 = p2 - unable to solve given the complexity of the equations\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620433266161*^9}, {
  3.826620578618504*^9, 
  3.826620590521783*^9}},ExpressionUUID->"d6e4543c-6e5a-49af-9963-\
331fc15fac4d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p1r", " ", "=", " ", 
    RowBox[{"m", ".", "p1"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Dpa", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
       RowBox[{"Hpa", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
       RowBox[{"D1", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
       RowBox[{"H1", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
       RowBox[{"D2", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
       RowBox[{"H2", " ", "\[Element]", " ", "Reals"}]}], ",", " ", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"p1r", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"p2", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"p1r", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
          RowBox[{"p2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"Hpa", ",", " ", "Dpa"}], "}"}]}], "]"}]}], "]"}], ";"}], 
   "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.826443084718766*^9, 3.8264432422317953`*^9}, {
   3.8264571869259*^9, 3.826457234059504*^9}, 3.826457269739822*^9, {
   3.826620284850874*^9, 3.8266203127221327`*^9}, 3.826622561870483*^9, 
   3.918389108647575*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"bcdc6009-13ea-4aba-8b68-3b38100db850"],

Cell["\<\
Also tried for the original form of the matrix  - same problem\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 
  3.826620482047701*^9}},ExpressionUUID->"807c097f-82d5-41d7-b9e9-\
b52aa32b3702"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1rs", " ", "=", " ", 
   RowBox[{"rotns", ".", "p1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Dpa", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
       RowBox[{"Hpa", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
       RowBox[{"D1", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
       RowBox[{"H1", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
       RowBox[{"D2", " ", "\[Element]", " ", "Reals"}], " ", "&&", " ", 
       RowBox[{"H2", " ", "\[Element]", " ", "Reals"}]}], ",", " ", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"p1rs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"p2", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], " ", "&&", " ", 
         RowBox[{
          RowBox[{"p1rs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
          RowBox[{"p2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"Hpa", ",", " ", "Dpa"}], "}"}]}], "]"}]}], "]"}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.826443358590716*^9, 3.826443361548894*^9}, {
   3.8266204887349052`*^9, 3.82662052970155*^9}, {3.826620597515264*^9, 
   3.826620612273246*^9}, 3.826622565589636*^9, 3.918389134761413*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"ec9b2a99-304b-489a-854c-cc06ba38c445"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Try numerical solution", "Section",
 CellChangeTimes->{{3.826441782781355*^9, 3.826441793540408*^9}, {
  3.8268808418468018`*^9, 
  3.8268808452311974`*^9}},ExpressionUUID->"acf2baf4-ca62-490b-9b17-\
7937030029e5"],

Cell["\<\
Try solving numerically for some typical values - first substitutions set up \
the misaligned polar axis, second set set up the first point. This is then to \
be rotated about PA through \[Theta] = 45 degrees (v2).

V2a is an analytic expression when D1, H1 and \[Theta] are known,  but the \
position of the polar axis is not. From knowing P1, P2 (=v2 here) can we \
numerically solve for Dpa and Hpa?\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}},ExpressionUUID->"e37920fe-2c98-4ac6-86b2-\
77d5b4a7cd2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pavals", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dpa", " ", "\[Rule]", " ", 
      RowBox[{"85.8", "\[Degree]"}]}], ",", " ", 
     RowBox[{"Hpa", " ", "\[Rule]", " ", 
      RowBox[{"15.0", "\[Degree]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1vals", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"D1", " ", "\[Rule]", " ", 
      RowBox[{"60", "\[Degree]"}]}], ",", " ", 
     RowBox[{"H1", " ", "\[Rule]", " ", 
      RowBox[{"0", "\[Degree]"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8264418344834843`*^9, {3.8264418769854527`*^9, 3.826441999332302*^9}, 
   3.826442097984342*^9, {3.8264421813801928`*^9, 3.826442183220791*^9}, {
   3.826442404204318*^9, 3.826442408409503*^9}, {3.826442451201791*^9, 
   3.826442451561059*^9}, {3.826883854947001*^9, 3.826883858146366*^9}, {
   3.82688401176266*^9, 3.826884016051909*^9}, {3.826884139073023*^9, 
   3.826884145641306*^9}, {3.827147889876629*^9, 3.8271478916763144`*^9}, {
   3.827148066690226*^9, 3.827148073971374*^9}, {3.827148183126306*^9, 
   3.82714818479066*^9}, {3.828185367525461*^9, 3.8281853733947773`*^9}, {
   3.918388845194194*^9, 3.918388855512171*^9}, {3.918449007066839*^9, 
   3.9184490170813093`*^9}, {3.918449264842696*^9, 3.9184492665824957`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"7699ecf7-0ad8-4c79-b9f4-cae80629a43d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m", ".", "p1"}], " ", "/.", " ", "p1vals"}], " ", "/.", " ", 
     "pavals"}], " ", "/.", " ", 
    RowBox[{"\[Theta]", " ", "\[Rule]", " ", 
     RowBox[{"45", "\[Degree]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v2a", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"m", ".", "p1"}], "  ", "/.", " ", "p1vals"}], " ", "/.", " ", 
    RowBox[{"\[Theta]", " ", "\[Rule]", " ", 
     RowBox[{"45", "\[Degree]"}]}]}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.826442006850527*^9, 3.826442043219858*^9}, {
   3.826442082618058*^9, 3.826442224727705*^9}, {3.826442318680489*^9, 
   3.826442322470581*^9}, {3.826443387013954*^9, 3.8264433872104883`*^9}, {
   3.826443595288381*^9, 3.826443648774736*^9}, {3.826455372254304*^9, 
   3.826455395653325*^9}, 3.826456800503399*^9, 3.826621356988675*^9, 
   3.826624227601684*^9, {3.826695379136668*^9, 3.826695399363042*^9}, 
   3.82669664264662*^9, 3.8266966751256933`*^9, {3.826697554643763*^9, 
   3.82669755509068*^9}, {3.8268142328272133`*^9, 3.826814234407776*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"bda02cce-7292-457b-a895-dc171ab1b33e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"v2", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", "==", " ", 
      RowBox[{"v2a", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"v2", "[", 
       RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", 
      RowBox[{"v2a", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"Dpa", ",", " ", "Hpa"}], "}"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.826814345551825*^9, 3.826814362383926*^9}, 
   3.918389146805539*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"79950649-e9c6-43d6-b7bd-b91f297161ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Try solution described above", "Section",
 CellChangeTimes->{{3.826441782781355*^9, 3.826441793540408*^9}, {
  3.8268808418468018`*^9, 
  3.826880875140731*^9}},ExpressionUUID->"0816d9d5-9c83-4d65-b65d-\
ca320a0ed0d4"],

Cell["\<\
Now try solving according to the scheme above: 
\tv1 is vector of P1, 
\tv2 is vector of P2 (calculated above)
\tdv is difference in two vectors
\tdva is unit vector in direction of dv
\tsz = sin of angle between horizon and dva
\tcz = cos of angle between horizon and dva
\tphi = azimuthal direction of dva\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}, {3.826814529262599*^9, 3.82681453488409*^9}, {
  3.826881054005064*^9, 3.8268812009759903`*^9}, {3.826881261411744*^9, 
  3.8268813134652967`*^9}},ExpressionUUID->"b9f05653-4c81-4b7a-b895-\
eed01d3e8592"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v1", " ", "=", " ", 
   RowBox[{"p1", " ", "/.", " ", "p1vals"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dv", " ", "=", " ", 
   RowBox[{"v2", " ", "-", " ", "v1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dva", " ", "=", " ", 
   RowBox[{"dv", " ", "/", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"dv", ".", "dv"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sz", " ", "=", " ", 
   RowBox[{"dva", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cz", " ", "=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"1", "-", 
     RowBox[{
      RowBox[{"dva", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phi", " ", "=", " ", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"dva", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"dva", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8268154316676826`*^9, 3.826815470228484*^9}, {
   3.826815506578978*^9, 3.826815529032604*^9}, {3.826872317392116*^9, 
   3.826872425310354*^9}, {3.8268725151180267`*^9, 3.826872627676878*^9}, {
   3.8268726610940113`*^9, 3.8268726891647367`*^9}, {3.8268727465249147`*^9, 
   3.826872778035874*^9}, {3.8268728526278257`*^9, 3.826872885258645*^9}, 
   3.826872929043742*^9, {3.82687342248748*^9, 3.8268734256466007`*^9}, {
   3.8268810449043703`*^9, 3.826881049149867*^9}, {3.826881214519438*^9, 
   3.826881219389415*^9}, 3.826881319654772*^9, {3.826881885256975*^9, 
   3.826881887804117*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"69ba8641-8a86-4d51-8bf2-327024c7aa16"],

Cell["\<\
Want to create equation for great circle perpendicular to dva. Start by \
creating unit circle in the y-z plane, then rotate around the y-axis so that \
the height of the transformed x-axis matches the z-value of dva. Second \
rotation around z to align transformed x-axis with dva.\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}, {3.826814529262599*^9, 3.82681453488409*^9}, {
  3.826881054005064*^9, 3.8268812009759903`*^9}, {3.826881261411744*^9, 
  3.8268813134652967`*^9}, {3.826881349832652*^9, 3.826881616309972*^9}, {
  3.826882101275858*^9, 
  3.8268821624658403`*^9}},ExpressionUUID->"252d248a-820c-4c0c-b844-\
6038a64c7818"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.826815537136711*^9, 3.8268155384415407`*^9}, {
   3.82681559318956*^9, 3.8268155956048326`*^9}, {3.826871870861184*^9, 
   3.826871873842346*^9}, 3.8268813404510317`*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"a4205349-0a19-4102-9a72-e0144fca8736"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gc", "  ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", " ", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8268718776962433`*^9, 3.826871903244231*^9}, {
   3.826871961898275*^9, 3.82687197502566*^9}, 3.826881622559325*^9, 
   3.826882167801507*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"beec0113-d15f-435e-978a-9c52d6e2f992"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}], ",", 
   RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.826871976997937*^9, 3.826884158516863*^9, 
  3.827148264993539*^9, 3.828185392237433*^9, 3.918385753888633*^9, 
  3.91838894123307*^9, 3.918389170393055*^9, 3.918449271875353*^9, 
  3.919750238906522*^9, 3.9205218027182703`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"3112b1e8-9622-40f3-a9ff-09efbdcc013e"]
}, Open  ]],

Cell["\<\
Below are transformation matrices which accomplish that rotation.\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}, {3.826814529262599*^9, 3.82681453488409*^9}, {
  3.826881054005064*^9, 3.8268812009759903`*^9}, {3.826881261411744*^9, 
  3.8268813134652967`*^9}, {3.826881349832652*^9, 3.826881616309972*^9}, {
  3.826882101275858*^9, 
  3.826882205000709*^9}},ExpressionUUID->"983cf44c-5bb8-4474-8115-\
29cf48c53d50"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ry", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cz", ",", " ", "0", ",", " ", 
       RowBox[{"-", "sz"}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"sz", ",", " ", "0", ",", " ", "cz"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rz", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "phi", "]"}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "phi", "]"}]}], ",", " ", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sin", "[", "phi", "]"}], ",", " ", 
       RowBox[{"Cos", "[", "phi", "]"}], ",", " ", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.826815590578356*^9, 3.826815590693101*^9}, {
   3.826872033017346*^9, 3.826872208464491*^9}, {3.826872258252017*^9, 
   3.826872264391522*^9}, {3.826872936842293*^9, 3.826873002466329*^9}, {
   3.826873110898731*^9, 3.826873141069099*^9}, {3.826879152442338*^9, 
   3.826879153946519*^9}, {3.826881644901986*^9, 3.826881648845461*^9}, {
   3.826881688340788*^9, 3.826881693331827*^9}, 3.826882047782754*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"a7bd4da9-cd0a-432e-9e4b-3c9f7bf5ca81"],

Cell["Check that the rotated great circle is perpendicular to dva:", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}, {3.826814529262599*^9, 3.82681453488409*^9}, {
  3.826881054005064*^9, 3.8268812009759903`*^9}, {3.826881261411744*^9, 
  3.8268813134652967`*^9}, {3.826881349832652*^9, 3.826881616309972*^9}, {
  3.826882101275858*^9, 3.8268821624658403`*^9}, {3.8268822148160458`*^9, 
  3.826882232055225*^9}},ExpressionUUID->"5875fda7-26d0-4e69-99c4-\
6e86e4c58106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Rz", ".", "Ry", " ", ".", "gc"}], ")"}], " ", ".", " ", "dva"}], 
  "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.8268817255713663`*^9, 3.826881750186054*^9}, {
  3.826881842278575*^9, 3.826881845813982*^9}, {3.8268820236795893`*^9, 
  3.826882038558895*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"c83a1356-8d43-4812-9a32-dda24bb5097f"],

Cell[BoxData[
 RowBox[{"5.551115123125783`*^-17", " ", 
  RowBox[{"Sin", "[", "\[Phi]", "]"}]}]], "Output",
 CellChangeTimes->{{3.826881735579651*^9, 3.826881751474284*^9}, 
   3.826881846841319*^9, {3.826881933879401*^9, 3.826881945165743*^9}, 
   3.826882039872716*^9, 3.82688389627633*^9, 3.8268840430675077`*^9, 
   3.826884166525043*^9, 3.827147919172411*^9, 3.827148097326511*^9, 
   3.827148200885044*^9, {3.827148271302415*^9, 3.827148274560669*^9}, 
   3.828185399969881*^9, 3.9183857629836893`*^9, 3.9183889506374083`*^9, 
   3.918389170400448*^9, 3.918449271885721*^9, 3.919750238910713*^9, 
   3.920521802732492*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"7c910fb9-d64c-4315-9dd7-92796d8e217f"]
}, Open  ]],

Cell["\<\
Yes it is! Now create the equations for the rotated great circle:\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}, {3.826814529262599*^9, 3.82681453488409*^9}, {
  3.826881054005064*^9, 3.8268812009759903`*^9}, {3.826881261411744*^9, 
  3.8268813134652967`*^9}, {3.826881349832652*^9, 3.826881616309972*^9}, {
  3.826882101275858*^9, 3.8268821624658403`*^9}, {3.8268822640707912`*^9, 
  3.8268822864368258`*^9}},ExpressionUUID->"0903cf72-41df-4095-bdb6-\
2ea8ea662724"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gcc", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"Rz", ".", "Ry", ".", "gc"}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.826872214396083*^9, 3.826872235047595*^9}, {
  3.826873012186252*^9, 3.826873060922514*^9}, {3.8268732325609093`*^9, 
  3.826873291232204*^9}, {3.826873522646368*^9, 3.8268735252222767`*^9}, {
  3.82687917056954*^9, 3.826879173209463*^9}, {3.826879239678945*^9, 
  3.826879269932622*^9}, {3.8268816638767548`*^9, 3.826881680500387*^9}, {
  3.826882291598777*^9, 3.826882299452796*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"fdf6c730-5af3-48f3-9e3e-b87dc4674800"],

Cell["\<\
Now want to find out angle between P2 -> and A ->P2. Do that by creating the \
cross product of gcc and v1, and gcc and v2, then taking the dot product and \
convert the cross products to unit vectors.\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}, {3.826814529262599*^9, 3.82681453488409*^9}, {
  3.826881054005064*^9, 3.8268812009759903`*^9}, {3.826881261411744*^9, 
  3.8268813134652967`*^9}, {3.826881349832652*^9, 3.826881616309972*^9}, {
  3.826882101275858*^9, 3.8268821624658403`*^9}, {3.8268823156039867`*^9, 
  3.826882401120483*^9}},ExpressionUUID->"6d287704-63f9-4a78-a464-\
d6bdd8105c19"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a1", " ", "=", " ", 
   RowBox[{"Cross", "[", 
    RowBox[{"gcc", ",", " ", "v1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", " ", "=", " ", 
   RowBox[{"Cross", "[", 
    RowBox[{"gcc", ",", "v2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cosang", " ", "=", " ", 
   RowBox[{
    RowBox[{"a1", ".", "a2"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a1", ".", "a1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"a2", ".", "a2"}], ")"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.826879318613803*^9, 3.8268793192427197`*^9}, {
   3.826879359842175*^9, 3.826879471925234*^9}, 3.826879517213868*^9, 
   3.826880020404354*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"a79de922-93a6-4c94-be25-7a39675d9f5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", " ", "[", 
  RowBox[{"cosang", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.826879466433482*^9, 3.826879499946848*^9}, {
  3.8268795342084723`*^9, 3.826879534537177*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"11dc11a5-e99e-4cd9-931b-f01c7e01df4f"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwV13c81V0cB/A7VAgJiQaaSFSoFPX5GdF4WhSVESoNEcpIVCRpyUpRRkop
UZHxkD1KWRlFGla47nCvHeE5z1/39X6d373n3nPP+X4/Z5H9GdNjDBqNdpxO
o/3/yiwQre5Y67d58pm9hfOBHixj5esqhB/G7QgjS9VjPRh7vepoc9gZKK9p
7Sx27cFvmROjmWGX0HKtSz/8Rg++GQcUJ4bdwZKzLXVvc3rQeDhMOSYsDnyl
M8/M5rDwRktDp6MsHi1GxTbKSix4rg//7ln8CDeeTFb8WsGCEKyXPcp9DI9P
02RpFAsKuwSZAynP8OL2nrQZJ1kwPS3/7X7YK1i/u+HrlcmCmA4KIk1eYwUn
3iOvgAX+v66z28peQ0piA53zgYXMvC8Z7sVvcKZj1/fpLSwYlsVPxuamw8jn
LHfjJAvWDdohgpQsiMx0CKunehHab5UeGVYA0e3sdrPsXtyeE61XKF6IrzL+
6vUFvah7c1VxrWkhvrmXm1Dve2HZa/VboaUQsiauFZ2NvXC2nOnazylC3Pbd
3Vb9vYjYdCIoSrIUVmOx+utU2GhuNnOU2F8KfZfokRcabCh4YNeVqFK8kk6P
lVzLxrNUWRmnxWU4PBnh8kqfjRzFsjhKuxxSY9vrcYiNX/TFWd0WHzA6X16j
JoiNpbHi0VYPP8C11feEQzAbJzb+8fnc+gHNibFSgnA2+t1qDXJPVkC8d7Nh
WywbQp0Xq4MvfIRDwcuvq9+ysaK85ffauEpkFyjaPf/Ohm7ZdlGDs7UoU/25
sGYZB5INT2vWh9dCvj33+QdVDjrbGXfV02sxz2P/yRx1DoJpuYryA7WIW76m
JnAtB+26amv5bp8RP8N+Q5kRB0FpM21j3epQd3x8sNuOgy9xlRljrg1I3fkF
6+5xkJyqcoEf2oDBo2/GzaM5uJwXQHW9aUBTvXu3awwHqi16nz4LGiA+1uEf
+ZgDH9mU1iTXRgTkOmo8fMXBktu3Z1q4fsG7bQvEn5Rz4OK9yy7dpQkd2Tqt
g3wOtjvrJQmHNEH0nOD3sQHyvP2KPutXTQgcV35RN0S+z7bpvsK8JuT8Wx4S
N8bBJvn8+9aOzYg68rN0hhAXotnqtTMcvqEq9JhATpaLxCExWFl+x+rBMK+z
67m4yBq7+sb7O8IsDEMdN3Bx4EdP5fTo70CgvoWtLhdiZaWH3jR9xzWDrUIU
uHCL8PGYbv4D+u1jwU3GXFBanJTXe35CpN886ux+LpyyjwUzlrTiUJPXGi8X
LjS27VWia7fia8DLCC03LvjNemlTRq0wm6f4nX2Wi3Pj0l/+OrSi127rKjNP
Lrw3Fy8cedFK9odY0IQvF4GlCilszTbsV97xs+wGF/G1Xz81GLQjR+yF8rYE
LuztSqzrzdrxTTB0OvkxF0v6U/s+H23H3PgbOjMTuXgqHShdE9iOsDWxZ0ue
cZFirm1Z8bEdMSev82RTuMj5HtKbZ9oBFi344s4sLhp6tok8s++Ep725sfRH
LvqiVLZccetERHem5PxPZD13zPA77N+JFJUS+UWV5PenlI7OTeiEorRwv3I1
F8mu6AlqI56uSF9Ux4X/mPb7U7a/EfS5NaO4mYtVYkpXNWy6wPQU2dLQzcX2
vMlCUecu6O6wOZnUw8VR5x9/u3y78L7WQ/oCi4vo2uhzcTFdmLczhLaAzcX0
u3OOSv7ogurNfLd/eFx8XzjTsN+yG68tWTtODnJxY9UwLfNgDxgn6YmxU2Q9
PbepdZ3qwZv4lex9NB5OFjzcL+vTg3svi9JF6Dxs3W34wiO2B7ZjdvXODB5m
nAkxW9/Rg86saReVp/EQkLriafZpFvyuHp80E+Xh3LBvbY8vC9Nrz20cID6y
+fOY3B0WFuq9lw6dyYNBtefu829YoGlYPfkgxgOdVzq6YZgFLfGtx5Vn8XBR
/fCO3Eu9kMjTznoizYOze5o7O6QXb/+qeGrI8GCdNy1+fkIvsl/PZ2cS6+18
OXihtBfhmssHS+bwMH76T4yeCBs/561IrZ7Lg9fLcH5eGBvxfK3Pz+bzcGKw
ax7vMRvSi+OOLlzAg4Xexi0KGWzcG5YrCCVeV9kadfErGxJbA6s8FvIwyFY3
xAIOPBnpTpqKPLiqfbhbmMjBnoTdD10W89B5rPNyfCYHEeV/934mNo+nnb78
noNfB3RZq5fwsHHOBgOKxUHiutICDjFj6jmvYCUX+wJrl1gs4yGs7qZJQToX
+V6O7iPKPAiJJ2nGlXJhFvorwViFBw+T0oWXGrlQTxPPjyA+9O7vwOYRLm4G
mBSqq/Kw+KlTfP5GHh4HuU43W8FD2vndf/KKeEiND1riuJKHpW8dO2PqeHh6
S9zrOXEk71qNbwcPflLcki5i7yOFiZum9eH4RI2hjTr5f3auMc3b2gdFiVX9
lAYPb6/t3BRzsA+tEo9neRIvLz6p4nuqDzHW1ioviUXXJ0zq3eqD4fQzO6VX
8VCvJJ38rqYPLHcJt0ZiY8tVkQ9b+zD4q9KduZqH7Ls7/HwEfXizSM1rNfGu
acVqsSJ8bDu+zfsasab3GN1GjQ/Hz0oXVdfw4HgvaKRKiw/DU3S/3cRP3spy
N+nxoSay8+o5Ytk+zaaFO/mIPmIXnks8dsQx9YczH/SU51WbNHmwnT3g9c6D
j0+uh7oOEpflexs+uMjHZPr5Je7EIfI3mg4E81GkVjXzOfFw+ezH6yP5UJxr
n1VEbHUuykk2lo8pzvKgZmLlmiRGQwofbXP5UdO1eLjls7oqLYOPoR1bW+YT
96tm3wvN42NM1ctgNXF+wPuVu6v4eCc15G9OvFRz94h6Ix+bNl63OkF8/deX
IrEffOwwvmJ1nnjfxi7zjxw+qqqX1d4nzul2WvR8kA+hLGGjZ8SKd4fY1/7y
oW5V/vMtcYCBb6aDkAD+NK/4IuLePiG/LWIC6JuuvV5FvCfm1o6lMgLMOy0T
1UScuV1GlrlAAK9G1dp24gWjD1rblghQ4x+kwSH2S1ySXKgmQF+j/ttB4i7T
ZPc4LQG2xx6z+0v8D02LuqgrwHx5xjqmNtlvKTmi1oYCZAmWaIoQy1kaNOru
EOCt/pf9EsQXhT/GzTMTQCx08SMp4o6Mvaf+HBLgwBdJGVnirUeatZvsBaj1
eJYqR5wqaTeVeUqAS8Zsl3nEMvk9FXfdyPxBvw7NJz7v6BJxzluAUe7V0//7
p9yojZk/Gb//M/H/543KL6lq3hCgXbZnujzxi7MzBiXDBDA/EXfn//kkF93J
74sSQHZsCtLEHtWy16sfCWCZxJSbRdxyIdYs5bkAc/MT5ooSU6rLFW69EeDz
YP1mIeKnX1J6Tv0rwJVzt25PkPUQC1ibvq1IgJP1BcxhYrc1eb4qFQL8mmP7
iEvc9NNo64zPZL1SrR06iTfdqpTqahJgus8z02/Ewt0tzx73CDBxqD6+hNg5
4oibP1+AiJ03GVnE9fpsPbtRAfR0dG8+J459OPZZQbgfnrYLZ98iFtru/3Bi
Vj92tMpJ+BCfGhE5/n1uPzpaYtc4Eq81lf8bpdyPFttPbGPi6Kn4cq9V/eBd
0vDXIqalqIRarO+Hwpa7mxWJK2foLJ9j0g8bp0aVQbLf7fPM94Q49GOx98P8
cGLNTDkp+TP9uC1FeiAx49W3+kee/VjVubng//OVEG9jkR7Uj749qlnziduv
ONh8eUHmz1oTEE7OZ5qPitLh9H4YyFzhORP7u/e2def2Q/fq433biBcfdz72
p7IfLxOFpMdJPbDf7nF6QV8/Nkim7DL9vz4Y6mgkjvRDaR7n9jJiht5Ynzpt
AG9eLS0fIfUmQf3iWcwegF8bWzGKuF0y0NteawAuWONUQ+qV/de7QUmeA5ih
WyMiSuqdZq3F9jWXB3BHUelJJamHjAp5sZygAXgGTKwKJk7IibnzKWoAU7Ia
8ySI22MSI3m5A+BE3Fahq5HPO5rxRJs2iPx3+k/TSX3WtPZ0yBMehDktQuoY
McN8g4rx7EHUxN9xmEOcYJKXbLF4EJNfXhW7kXrfvqIszdtoEJ8bddYrLSf9
UtBQWBg0iAS3lGNbSL+w9Q6xyA4ZxMjzkSNs0l+smP/wXt0fBOeS5JGQ//vN
nJL5cUmDGK2qs/26iJynDW88fD8Mwjdb0figEg8afrdXbhQewqemJLGVpJ+t
EN1WskZyCJGN1/OKSL9TDhc6pCo3hNeV5fbmxEqJF67JqQxBIqQr0If0S+mK
k+3DJkN4Lq618J08D6OSxvfTrw1h6bzQjBmypD9G0Vcl3xnCLLoWdYv0X8Hi
vLKEe0P4cf/A61nEvdraA6HPhtDTo7BJmvTrHwcW73J5PwSaXBhbTIqH4vhJ
pvqMYShEt7+oECf1dHXWmaeBw9BX1A23FeLho+bXLvfgYdxbpVpTzCTnZe2I
9ZbIYTAalL8uIQ7YsP6fzsRhaN+Zb9xO8soFgyyVxWXDqOwM9t5D8s2pfVlt
McwR6OpkCAv+cGHilWV29/IIlDly9jokHwV4f/14NGgE17fsPujK5aLYZ0Rf
O2QE5tH7OEkcLjb7rV9dHzeCHH71T2mSr9bdyBKbXTCC1JD0kiaSz5Y+zCq7
NTGC2+HqggVtXDAKs9YHeI9C269Fxo/kuxfiUk8n/Eeh9DUm59xnLkwtT8t4
3hxF/qLVrg61XDweVhKcfDiK8PcdQkYkHxqp33ixO38UT88Wu3ZXkHwbbbVw
PuMPzK7IJlQWknzpTmemXf+DjXXxmaMvuUgrtnRVC/uDupUViknJXBySzPz1
JPoPWqs11Pa/IHkz+dS7e8l/YJTsK5dE8u0/7fXuvlV/cLfcu3k1ycfBu5/2
bJ09htJgD+2PkVzMXrGj+tf9MaxULegfJ/m6a0bc7A/xY9hGE9M760Py8O/+
fa+TxvAg3qW/25vk0UfRLZezxxBVcSqiguTzbLnenkVNY7A5O3elkysXNjOu
M4/OHce7Nl2fNUe5eNlZrtNzdxyRZzKSbphw4Vc8z6c2ZhwGic/5iVu4JD85
F2QnjsNa++ZEniEXNCtZ4+sZ4xB3d93ZSe4XZvXHzFY0jsOGWT9HRIeLsSIh
59Myf1GtYxeeoszF1jiDx/ywv3gZ+mtkNbnfXPtQ+8P/wV98iwmafELnolxg
IzfnyV88CHVSlZniYIvRhdsbMv5iZfS5wo4/HBiw0j39v/5FOmXwzriPAz2t
Zf/ILJiAuWB96exmDi5YpQc+XTqBEM/4NM0vHORc1S/SUZ9A9IGNwrvqOdjQ
ZL3OevMEhlvq356t4mCdb6TSU9sJ/MvLjTlfxMHq9zOG1idOIM/BxOtIEgdn
+HdXfUyZQFbd5PGlJFemyi89ZZU5AVEdy5afjzhQP039uvx+AnMbGRLUAw5W
zD5fUcGawMzx3b/e3OZgqWVvjKXGJEzt3ByNXDmY21dpfClrEnNDDrg+1uTg
fmiBHatgEu0lsqKBGhzIaaf5mH2YhFSRsKztCuLz99KUmydxe9PMVWOLOJjH
tFeoHZuEkNTO3hJJDhTmjgwpbZ7C4i522n0OG7H/siRvGk+hqqQroLubDUWr
72pDu6Ygf8Rhy8oONpQeFdlVHJ5CUZzzsnvNbCxWu1Xl6jeFpaHd+/vK2FiO
RYnFpVPgrlP6eechG0/bpAtXVk3hYN2e+avvkfGA6S2RjVNw7ys5URrKhnIF
W9Kxawo3ao6nfghkI0LVMl9EiEad35eipOfCRmT6shVpy2jUI90qdirFRvT7
HDrzJI0aex938sWXXvBbX5/vO02j7hX9WTRZ0wuTsaeCFhcaJVUtMmhQ0YvB
leFtb73IuFabblxuL3aFORY5BJH3u9Pux8T1gmG9wO/jMxoVI9njdP1oLw54
SP3JTKZRm3N2P2u26sWrO8Kuj1/RqOGpleJy+3thVTxo65NFoz7met202dKL
TOUqSuM9jdp3ufGo2LJeOPb70sK6aJS4r/CNf1tZKJ55zutiL42yXBiwse4r
C3LLTvFP8WgU7/DAmcZqFsotzFsNh2nUazVXu+h3LCjlaRQOTaNTzRcW9Mne
Y6Hh2q9LB5fRKclnvB8PTFjQW6g/pXSUTgVE+jYnRPRgq1WDm/0JOpX6Uj3P
+VoP9j043vX4NJ2qjs2fNce7B47ywVXL3emU2cHxdp5ND6LntDxYGUinxp6/
Yr9f3oNRcXcdnSQ61Xdg+tdbqd0Q2in88vxLOiWfdGd+bmw3JG89UMx9TaeC
f6SsywnuhrJo8fTN/9IpB21KTcW5G+bTZzUafqRT3dUYT13RjbeTSa67OXQq
uUqn611UFwo36f0O4dOpeR6s4tjALlT61ByoG6RTmlzRVqOzXegYG8L+CTpV
aCm+7tuOLkiNGEhYSjCo2WP+7RJjv+HS9/2Fw2oGdVhkzvH8bb/ho+GikKTN
oLZfOdjnpEnu1U7MMJYOg4pePqHwed5vxLFVz5/WZ1AS8/A4pbcT1d0eJm6m
DKp9w8l9DwM7odYq2el7jkE9acsdX5bagV3dSsUeXgyq+67OfNvwDrjwVsef
8WFQb5NfZRh5dZB76R4ruwAy/slRS1i/A3ryoQ1GEQyqYVaVmFl1O/4xnV02
8y2DCqne+yr3SxucDy56LJTNoGzoNNORjDaE2K7xm8hlUCJHO6jyiDY0OO/d
1FfCoEgVPTZ3bxusboZm1NUzqG0hIjMtSltxunT206gBBmXRePO4i/IvBH9a
FBA2wqBK8hzZSV9+4nXdGvub4wxqcNsumaqAnxhs3avgy2RSx0pKc9//+AGf
idBIW2kmRUVtXzXL/zturZO6pqzFpII9wrppIc1I3bT4mNJ6JjXqOafmt1oz
ao00DeV1mdRPzgeeU3kTZMxMp0QNmVT3TmvxfSNf8fBMmCfPlEm1DGVLs02+
ICVJ6kSGG5PaeD7pT0lcHQIaC/SZnkzqPOOvL0O+DlYMp/l7LzCpXb8rJI1D
PkPU6n015wqTKi56mVDkVQuHWT5rl95lUgc9DNse2VVCyeM3IzyLSakbXt97
7kwxRhLCvrfmMqnMqdppNxcUoboGmRqFTGrTVUef6usF8FWNPvnxA5MKvLh1
b7hEDr5931VL/8akCuRCFRRMUhBhmB3j8pdJddo6+ZYtfFLg6HLMM58mROku
zOhzffKiwCBGaq/YNCEq5GZoW2Dc6wLB8GmhJHEhqjLdbcYPi6yCXS8WOf5S
EKKumO8NL4otLhCefVNnl74QNdMpdOby17UFMpFRRun/CFFFyRmRd/fXF/wH
TtwqRg==
          "]], LineBox[CompressedData["
1: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
9f//i/4HX+D/0g==
          "]], LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA7xcHRwS3F0DBq7WWlVXTv8miPGTG
uBdAB8AB73uJ0r8m4Vw0QcEXQLVtzfMpjc2/4F2d1DbSF0Avs5MU+JC+v3dt
pYhV1BdAGvWFH38ou78Ofa08dNYXQD9icsB0ybe/PZy9pLHaF0DJ45BS9yex
v5ra3XQs4xdAcfc1pvZikb9UVx4VIvQXQGuL2ZgVdLM/62YmyUD2F0AooPvx
a0K2P4J2Ln1f+BdA4TdbNkoHuT+xlT7lnPwXQOa6GuHbdL4/DtRetRcFGECm
VWb3nnDEP8hQn1UNFhhATuAhLoMIzj9qxOW+BxgYQOPDko1SFc8/DTgsKAIa
GEAQA19/Sg/QP1Ifufr2HRhAMskQ+00T0T/b7dKf4CUYQNpHobHpBtM/7ooG
6rM1GEC2nsh7AKHWP5D+TFOuNxhAXajPNG0N1z8zcpO8qDkYQPdGRw1meNc/
eFkgj509GEA0sOI3EErYPwIoOjSHRRhAxGqdLNHc2T8VxW1+WlUYQFeHMEs4
xNw/uDi051RXGEDNSIDdrBvdP1qs+lBPWRhAeZNZGflx3T+ek4cjRF0YQGEa
KcApG94/KGKhyC1lGEBGvL06YWDfPzz/1BIBdRhA15AP/tPc4D/echt8+3YY
QGEn1I8/AOE/geZh5fV4GEBCcvJMNiPhP8bN7rfqfBhAnlpjNcxn4T9PnAhd
1IQYQEYJdMzI6+E/Yjk8p6eUGEDrraUEaeDiP2ntzfXclhhAhtylxZ8A4z9w
oV9EEpkYQEcwJCVkIOM/fwmD4XydGEB7E8hDnV7jP5zZyRtSphhArfRAywPW
4z/WeVeQ/LcYQGUon2QesuQ/3S3p3jG6GEDjMbXz/8vkP+Thei1nvBhAnZxa
pInl5D/zSZ7K0cAYQAfRcg+bF+U/EBrlBKfJGEAa+y4r3HflP0q6cnlR2xhA
0DrIoPQp5j9RbgTIht0YQG939vf0PuY/WCKWFrzfGECvq7BQsVPmP2eKubMm
5BhAskoyQWJ85j+EWgDu++wYQDvu06zByuY/vvqNYqb+GEBNjkZtTFznP8Wu
H7HbABlAau8xSoJt5z/MYrH/EAMZQI5u4w+Dfuc/28rUnHsHGUDHyCCD6J/n
P/iaG9dQEBlABvZNg1jg5z//Tq0lhhIZQFz6ozr77+c/BgM/dLsUGUCpnJPc
bv/nPxRrYhEmGRlAij42o8sd6D8bH/RfWxsZQAnQyCG2LOg/ItOFrpAdGUB0
p9E+dDvoPyqHF/3FHxlAecfmnwZK6D8xO6lL+yEZQMMPx+dtWOg/e7vC1Q==

          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
Y6Hh2q9LB5fRKclnvB8PTFjQW6g/pXSUTgVE+jYnRPRgq1WDm/0JOpX6Uj3P
+VoP9j043vX4NJ2qjs2fNce7B47ywVXL3emU2cHxdp5ND6LntDxYGUinxp6/
Yr9f3oNRcXcdnSQ61Xdg+tdbqd0Q2in88vxLOiWfdGd+bmw3JG89UMx9TaeC
f6SsywnuhrJo8fTN/9IpB21KTcW5G+bTZzUafqRT3dUYT13RjbeTSa67OXQq
uUqn611UFwo36f0O4dOpeR6s4tjALlT61ByoG6RTmlzRVqOzXegYG8L+CTpV
aCm+7tuOLkiNGEhYSjCo2WP+7RJjv+HS9/2Fw2oGdVhkzvH8bb/ho+GikKTN
oLZfOdjnpEnu1U7MMJYOg4pePqHwed5vxLFVz5/WZ1AS8/A4pbcT1d0eJm6m
DKp9w8l9DwM7odYq2el7jkE9acsdX5bagV3dSsUeXgyq+67OfNvwDrjwVsef
8WFQb5NfZRh5dZB76R4ruwAy/slRS1i/A3ryoQ1GEQyqYVaVmFl1O/4xnV02
8y2DCqne+yr3SxucDy56LJTNoGzoNNORjDaE2K7xm8hlUCJHO6jyiDY0OO/d
1FfCoEgVPTZ3bxusboZm1NUzqG0hIjMtSltxunT206gBBmXRePO4i/IvBH9a
FBA2wqBK8hzZSV9+4nXdGvub4wxqcNsumaqAnxhs3avgy2RSx0pKc9//+AGf
idBIW2kmRUVtXzXL/zturZO6pqzFpII9wrppIc1I3bT4mNJ6JjXqOafmt1oz
ao00DeV1mdRPzgeeU3kTZMxMp0QNmVT3TmvxfSNf8fBMmCfPlEm1DGVLs02+
ICVJ6kSGG5PaeD7pT0lcHQIaC/SZnkzqPOOvL0O+DlYMp/l7LzCpXb8rJI1D
PkPU6n015wqTKi56mVDkVQuHWT5rl95lUgc9DNse2VVCyeM3IzyLSakbXt97
7kwxRhLCvrfmMqnMqdppNxcUoboGmRqFTGrTVUef6usF8FWNPvnxA5MKvLh1
b7hEDr5931VL/8akCuRCFRRMUhBhmB3j8pdJddo6+ZYtfFLg6HLMM58mROku
zOhzffKiwCBGaq/YNCEq5GZoW2Dc6wLB8GmhJHEhqjLdbcYPi6yCXS8WOf5S
EKKumO8NL4otLhCefVNnl74QNdMpdOby17UFMpFRRun/CFFFyRmRd/fXF/wH
TtwqRg==
             "]], 
            Line[CompressedData["
1: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
9f//i/4HX+D/0g==
             "]], 
            Line[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA7xcHRwS3F0DBq7WWlVXTv8miPGTG
uBdAB8AB73uJ0r8m4Vw0QcEXQLVtzfMpjc2/4F2d1DbSF0Avs5MU+JC+v3dt
pYhV1BdAGvWFH38ou78Ofa08dNYXQD9icsB0ybe/PZy9pLHaF0DJ45BS9yex
v5ra3XQs4xdAcfc1pvZikb9UVx4VIvQXQGuL2ZgVdLM/62YmyUD2F0AooPvx
a0K2P4J2Ln1f+BdA4TdbNkoHuT+xlT7lnPwXQOa6GuHbdL4/DtRetRcFGECm
VWb3nnDEP8hQn1UNFhhATuAhLoMIzj9qxOW+BxgYQOPDko1SFc8/DTgsKAIa
GEAQA19/Sg/QP1Ifufr2HRhAMskQ+00T0T/b7dKf4CUYQNpHobHpBtM/7ooG
6rM1GEC2nsh7AKHWP5D+TFOuNxhAXajPNG0N1z8zcpO8qDkYQPdGRw1meNc/
eFkgj509GEA0sOI3EErYPwIoOjSHRRhAxGqdLNHc2T8VxW1+WlUYQFeHMEs4
xNw/uDi051RXGEDNSIDdrBvdP1qs+lBPWRhAeZNZGflx3T+ek4cjRF0YQGEa
KcApG94/KGKhyC1lGEBGvL06YWDfPzz/1BIBdRhA15AP/tPc4D/echt8+3YY
QGEn1I8/AOE/geZh5fV4GEBCcvJMNiPhP8bN7rfqfBhAnlpjNcxn4T9PnAhd
1IQYQEYJdMzI6+E/Yjk8p6eUGEDrraUEaeDiP2ntzfXclhhAhtylxZ8A4z9w
oV9EEpkYQEcwJCVkIOM/fwmD4XydGEB7E8hDnV7jP5zZyRtSphhArfRAywPW
4z/WeVeQ/LcYQGUon2QesuQ/3S3p3jG6GEDjMbXz/8vkP+Thei1nvBhAnZxa
pInl5D/zSZ7K0cAYQAfRcg+bF+U/EBrlBKfJGEAa+y4r3HflP0q6cnlR2xhA
0DrIoPQp5j9RbgTIht0YQG939vf0PuY/WCKWFrzfGECvq7BQsVPmP2eKubMm
5BhAskoyQWJ85j+EWgDu++wYQDvu06zByuY/vvqNYqb+GEBNjkZtTFznP8Wu
H7HbABlAau8xSoJt5z/MYrH/EAMZQI5u4w+Dfuc/28rUnHsHGUDHyCCD6J/n
P/iaG9dQEBlABvZNg1jg5z//Tq0lhhIZQFz6ozr77+c/BgM/dLsUGUCpnJPc
bv/nPxRrYhEmGRlAij42o8sd6D8bH/RfWxsZQAnQyCG2LOg/ItOFrpAdGUB0
p9E+dDvoPyqHF/3FHxlAecfmnwZK6D8xO6lL+yEZQMMPx+dtWOg/e7vC1Q==

             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 2 Pi}, {-0.30209865300883726`, 
            0.9438607329934134}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, 2 Pi}, {-0.30209865300883726`, 
           0.9438607329934134}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
         "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwV13c81V0cB/A7VAgJiQaaSFSoFPX5GdF4WhSVESoNEcpIVCRpyUpRRkop
UZHxkD1KWRlFGla47nCvHeE5z1/39X6d373n3nPP+X4/Z5H9GdNjDBqNdpxO
o/3/yiwQre5Y67d58pm9hfOBHixj5esqhB/G7QgjS9VjPRh7vepoc9gZKK9p
7Sx27cFvmROjmWGX0HKtSz/8Rg++GQcUJ4bdwZKzLXVvc3rQeDhMOSYsDnyl
M8/M5rDwRktDp6MsHi1GxTbKSix4rg//7ln8CDeeTFb8WsGCEKyXPcp9DI9P
02RpFAsKuwSZAynP8OL2nrQZJ1kwPS3/7X7YK1i/u+HrlcmCmA4KIk1eYwUn
3iOvgAX+v66z28peQ0piA53zgYXMvC8Z7sVvcKZj1/fpLSwYlsVPxuamw8jn
LHfjJAvWDdohgpQsiMx0CKunehHab5UeGVYA0e3sdrPsXtyeE61XKF6IrzL+
6vUFvah7c1VxrWkhvrmXm1Dve2HZa/VboaUQsiauFZ2NvXC2nOnazylC3Pbd
3Vb9vYjYdCIoSrIUVmOx+utU2GhuNnOU2F8KfZfokRcabCh4YNeVqFK8kk6P
lVzLxrNUWRmnxWU4PBnh8kqfjRzFsjhKuxxSY9vrcYiNX/TFWd0WHzA6X16j
JoiNpbHi0VYPP8C11feEQzAbJzb+8fnc+gHNibFSgnA2+t1qDXJPVkC8d7Nh
WywbQp0Xq4MvfIRDwcuvq9+ysaK85ffauEpkFyjaPf/Ohm7ZdlGDs7UoU/25
sGYZB5INT2vWh9dCvj33+QdVDjrbGXfV02sxz2P/yRx1DoJpuYryA7WIW76m
JnAtB+26amv5bp8RP8N+Q5kRB0FpM21j3epQd3x8sNuOgy9xlRljrg1I3fkF
6+5xkJyqcoEf2oDBo2/GzaM5uJwXQHW9aUBTvXu3awwHqi16nz4LGiA+1uEf
+ZgDH9mU1iTXRgTkOmo8fMXBktu3Z1q4fsG7bQvEn5Rz4OK9yy7dpQkd2Tqt
g3wOtjvrJQmHNEH0nOD3sQHyvP2KPutXTQgcV35RN0S+z7bpvsK8JuT8Wx4S
N8bBJvn8+9aOzYg68rN0hhAXotnqtTMcvqEq9JhATpaLxCExWFl+x+rBMK+z
67m4yBq7+sb7O8IsDEMdN3Bx4EdP5fTo70CgvoWtLhdiZaWH3jR9xzWDrUIU
uHCL8PGYbv4D+u1jwU3GXFBanJTXe35CpN886ux+LpyyjwUzlrTiUJPXGi8X
LjS27VWia7fia8DLCC03LvjNemlTRq0wm6f4nX2Wi3Pj0l/+OrSi127rKjNP
Lrw3Fy8cedFK9odY0IQvF4GlCilszTbsV97xs+wGF/G1Xz81GLQjR+yF8rYE
LuztSqzrzdrxTTB0OvkxF0v6U/s+H23H3PgbOjMTuXgqHShdE9iOsDWxZ0ue
cZFirm1Z8bEdMSev82RTuMj5HtKbZ9oBFi344s4sLhp6tok8s++Ep725sfRH
LvqiVLZccetERHem5PxPZD13zPA77N+JFJUS+UWV5PenlI7OTeiEorRwv3I1
F8mu6AlqI56uSF9Ux4X/mPb7U7a/EfS5NaO4mYtVYkpXNWy6wPQU2dLQzcX2
vMlCUecu6O6wOZnUw8VR5x9/u3y78L7WQ/oCi4vo2uhzcTFdmLczhLaAzcX0
u3OOSv7ogurNfLd/eFx8XzjTsN+yG68tWTtODnJxY9UwLfNgDxgn6YmxU2Q9
PbepdZ3qwZv4lex9NB5OFjzcL+vTg3svi9JF6Dxs3W34wiO2B7ZjdvXODB5m
nAkxW9/Rg86saReVp/EQkLriafZpFvyuHp80E+Xh3LBvbY8vC9Nrz20cID6y
+fOY3B0WFuq9lw6dyYNBtefu829YoGlYPfkgxgOdVzq6YZgFLfGtx5Vn8XBR
/fCO3Eu9kMjTznoizYOze5o7O6QXb/+qeGrI8GCdNy1+fkIvsl/PZ2cS6+18
OXihtBfhmssHS+bwMH76T4yeCBs/561IrZ7Lg9fLcH5eGBvxfK3Pz+bzcGKw
ax7vMRvSi+OOLlzAg4Xexi0KGWzcG5YrCCVeV9kadfErGxJbA6s8FvIwyFY3
xAIOPBnpTpqKPLiqfbhbmMjBnoTdD10W89B5rPNyfCYHEeV/934mNo+nnb78
noNfB3RZq5fwsHHOBgOKxUHiutICDjFj6jmvYCUX+wJrl1gs4yGs7qZJQToX
+V6O7iPKPAiJJ2nGlXJhFvorwViFBw+T0oWXGrlQTxPPjyA+9O7vwOYRLm4G
mBSqq/Kw+KlTfP5GHh4HuU43W8FD2vndf/KKeEiND1riuJKHpW8dO2PqeHh6
S9zrOXEk71qNbwcPflLcki5i7yOFiZum9eH4RI2hjTr5f3auMc3b2gdFiVX9
lAYPb6/t3BRzsA+tEo9neRIvLz6p4nuqDzHW1ioviUXXJ0zq3eqD4fQzO6VX
8VCvJJ38rqYPLHcJt0ZiY8tVkQ9b+zD4q9KduZqH7Ls7/HwEfXizSM1rNfGu
acVqsSJ8bDu+zfsasab3GN1GjQ/Hz0oXVdfw4HgvaKRKiw/DU3S/3cRP3spy
N+nxoSay8+o5Ytk+zaaFO/mIPmIXnks8dsQx9YczH/SU51WbNHmwnT3g9c6D
j0+uh7oOEpflexs+uMjHZPr5Je7EIfI3mg4E81GkVjXzOfFw+ezH6yP5UJxr
n1VEbHUuykk2lo8pzvKgZmLlmiRGQwofbXP5UdO1eLjls7oqLYOPoR1bW+YT
96tm3wvN42NM1ctgNXF+wPuVu6v4eCc15G9OvFRz94h6Ix+bNl63OkF8/deX
IrEffOwwvmJ1nnjfxi7zjxw+qqqX1d4nzul2WvR8kA+hLGGjZ8SKd4fY1/7y
oW5V/vMtcYCBb6aDkAD+NK/4IuLePiG/LWIC6JuuvV5FvCfm1o6lMgLMOy0T
1UScuV1GlrlAAK9G1dp24gWjD1rblghQ4x+kwSH2S1ySXKgmQF+j/ttB4i7T
ZPc4LQG2xx6z+0v8D02LuqgrwHx5xjqmNtlvKTmi1oYCZAmWaIoQy1kaNOru
EOCt/pf9EsQXhT/GzTMTQCx08SMp4o6Mvaf+HBLgwBdJGVnirUeatZvsBaj1
eJYqR5wqaTeVeUqAS8Zsl3nEMvk9FXfdyPxBvw7NJz7v6BJxzluAUe7V0//7
p9yojZk/Gb//M/H/543KL6lq3hCgXbZnujzxi7MzBiXDBDA/EXfn//kkF93J
74sSQHZsCtLEHtWy16sfCWCZxJSbRdxyIdYs5bkAc/MT5ooSU6rLFW69EeDz
YP1mIeKnX1J6Tv0rwJVzt25PkPUQC1ibvq1IgJP1BcxhYrc1eb4qFQL8mmP7
iEvc9NNo64zPZL1SrR06iTfdqpTqahJgus8z02/Ewt0tzx73CDBxqD6+hNg5
4oibP1+AiJ03GVnE9fpsPbtRAfR0dG8+J459OPZZQbgfnrYLZ98iFtru/3Bi
Vj92tMpJ+BCfGhE5/n1uPzpaYtc4Eq81lf8bpdyPFttPbGPi6Kn4cq9V/eBd
0vDXIqalqIRarO+Hwpa7mxWJK2foLJ9j0g8bp0aVQbLf7fPM94Q49GOx98P8
cGLNTDkp+TP9uC1FeiAx49W3+kee/VjVubng//OVEG9jkR7Uj749qlnziduv
ONh8eUHmz1oTEE7OZ5qPitLh9H4YyFzhORP7u/e2def2Q/fq433biBcfdz72
p7IfLxOFpMdJPbDf7nF6QV8/Nkim7DL9vz4Y6mgkjvRDaR7n9jJiht5Ynzpt
AG9eLS0fIfUmQf3iWcwegF8bWzGKuF0y0NteawAuWONUQ+qV/de7QUmeA5ih
WyMiSuqdZq3F9jWXB3BHUelJJamHjAp5sZygAXgGTKwKJk7IibnzKWoAU7Ia
8ySI22MSI3m5A+BE3Fahq5HPO5rxRJs2iPx3+k/TSX3WtPZ0yBMehDktQuoY
McN8g4rx7EHUxN9xmEOcYJKXbLF4EJNfXhW7kXrfvqIszdtoEJ8bddYrLSf9
UtBQWBg0iAS3lGNbSL+w9Q6xyA4ZxMjzkSNs0l+smP/wXt0fBOeS5JGQ//vN
nJL5cUmDGK2qs/26iJynDW88fD8Mwjdb0figEg8afrdXbhQewqemJLGVpJ+t
EN1WskZyCJGN1/OKSL9TDhc6pCo3hNeV5fbmxEqJF67JqQxBIqQr0If0S+mK
k+3DJkN4Lq618J08D6OSxvfTrw1h6bzQjBmypD9G0Vcl3xnCLLoWdYv0X8Hi
vLKEe0P4cf/A61nEvdraA6HPhtDTo7BJmvTrHwcW73J5PwSaXBhbTIqH4vhJ
pvqMYShEt7+oECf1dHXWmaeBw9BX1A23FeLho+bXLvfgYdxbpVpTzCTnZe2I
9ZbIYTAalL8uIQ7YsP6fzsRhaN+Zb9xO8soFgyyVxWXDqOwM9t5D8s2pfVlt
McwR6OpkCAv+cGHilWV29/IIlDly9jokHwV4f/14NGgE17fsPujK5aLYZ0Rf
O2QE5tH7OEkcLjb7rV9dHzeCHH71T2mSr9bdyBKbXTCC1JD0kiaSz5Y+zCq7
NTGC2+HqggVtXDAKs9YHeI9C269Fxo/kuxfiUk8n/Eeh9DUm59xnLkwtT8t4
3hxF/qLVrg61XDweVhKcfDiK8PcdQkYkHxqp33ixO38UT88Wu3ZXkHwbbbVw
PuMPzK7IJlQWknzpTmemXf+DjXXxmaMvuUgrtnRVC/uDupUViknJXBySzPz1
JPoPWqs11Pa/IHkz+dS7e8l/YJTsK5dE8u0/7fXuvlV/cLfcu3k1ycfBu5/2
bJ09htJgD+2PkVzMXrGj+tf9MaxULegfJ/m6a0bc7A/xY9hGE9M760Py8O/+
fa+TxvAg3qW/25vk0UfRLZezxxBVcSqiguTzbLnenkVNY7A5O3elkysXNjOu
M4/OHce7Nl2fNUe5eNlZrtNzdxyRZzKSbphw4Vc8z6c2ZhwGic/5iVu4JD85
F2QnjsNa++ZEniEXNCtZ4+sZ4xB3d93ZSe4XZvXHzFY0jsOGWT9HRIeLsSIh
59Myf1GtYxeeoszF1jiDx/ywv3gZ+mtkNbnfXPtQ+8P/wV98iwmafELnolxg
IzfnyV88CHVSlZniYIvRhdsbMv5iZfS5wo4/HBiw0j39v/5FOmXwzriPAz2t
Zf/ILJiAuWB96exmDi5YpQc+XTqBEM/4NM0vHORc1S/SUZ9A9IGNwrvqOdjQ
ZL3OevMEhlvq356t4mCdb6TSU9sJ/MvLjTlfxMHq9zOG1idOIM/BxOtIEgdn
+HdXfUyZQFbd5PGlJFemyi89ZZU5AVEdy5afjzhQP039uvx+AnMbGRLUAw5W
zD5fUcGawMzx3b/e3OZgqWVvjKXGJEzt3ByNXDmY21dpfClrEnNDDrg+1uTg
fmiBHatgEu0lsqKBGhzIaaf5mH2YhFSRsKztCuLz99KUmydxe9PMVWOLOJjH
tFeoHZuEkNTO3hJJDhTmjgwpbZ7C4i522n0OG7H/siRvGk+hqqQroLubDUWr
72pDu6Ygf8Rhy8oONpQeFdlVHJ5CUZzzsnvNbCxWu1Xl6jeFpaHd+/vK2FiO
RYnFpVPgrlP6eechG0/bpAtXVk3hYN2e+avvkfGA6S2RjVNw7ys5URrKhnIF
W9Kxawo3ao6nfghkI0LVMl9EiEad35eipOfCRmT6shVpy2jUI90qdirFRvT7
HDrzJI0aex938sWXXvBbX5/vO02j7hX9WTRZ0wuTsaeCFhcaJVUtMmhQ0YvB
leFtb73IuFabblxuL3aFORY5BJH3u9Pux8T1gmG9wO/jMxoVI9njdP1oLw54
SP3JTKZRm3N2P2u26sWrO8Kuj1/RqOGpleJy+3thVTxo65NFoz7met202dKL
TOUqSuM9jdp3ufGo2LJeOPb70sK6aJS4r/CNf1tZKJ55zutiL42yXBiwse4r
C3LLTvFP8WgU7/DAmcZqFsotzFsNh2nUazVXu+h3LCjlaRQOTaNTzRcW9Mne
Y6Hh2q9LB5fRKclnvB8PTFjQW6g/pXSUTgVE+jYnRPRgq1WDm/0JOpX6Uj3P
+VoP9j043vX4NJ2qjs2fNce7B47ywVXL3emU2cHxdp5ND6LntDxYGUinxp6/
Yr9f3oNRcXcdnSQ61Xdg+tdbqd0Q2in88vxLOiWfdGd+bmw3JG89UMx9TaeC
f6SsywnuhrJo8fTN/9IpB21KTcW5G+bTZzUafqRT3dUYT13RjbeTSa67OXQq
uUqn611UFwo36f0O4dOpeR6s4tjALlT61ByoG6RTmlzRVqOzXegYG8L+CTpV
aCm+7tuOLkiNGEhYSjCo2WP+7RJjv+HS9/2Fw2oGdVhkzvH8bb/ho+GikKTN
oLZfOdjnpEnu1U7MMJYOg4pePqHwed5vxLFVz5/WZ1AS8/A4pbcT1d0eJm6m
DKp9w8l9DwM7odYq2el7jkE9acsdX5bagV3dSsUeXgyq+67OfNvwDrjwVsef
8WFQb5NfZRh5dZB76R4ruwAy/slRS1i/A3ryoQ1GEQyqYVaVmFl1O/4xnV02
8y2DCqne+yr3SxucDy56LJTNoGzoNNORjDaE2K7xm8hlUCJHO6jyiDY0OO/d
1FfCoEgVPTZ3bxusboZm1NUzqG0hIjMtSltxunT206gBBmXRePO4i/IvBH9a
FBA2wqBK8hzZSV9+4nXdGvub4wxqcNsumaqAnxhs3avgy2RSx0pKc9//+AGf
idBIW2kmRUVtXzXL/zturZO6pqzFpII9wrppIc1I3bT4mNJ6JjXqOafmt1oz
ao00DeV1mdRPzgeeU3kTZMxMp0QNmVT3TmvxfSNf8fBMmCfPlEm1DGVLs02+
ICVJ6kSGG5PaeD7pT0lcHQIaC/SZnkzqPOOvL0O+DlYMp/l7LzCpXb8rJI1D
PkPU6n015wqTKi56mVDkVQuHWT5rl95lUgc9DNse2VVCyeM3IzyLSakbXt97
7kwxRhLCvrfmMqnMqdppNxcUoboGmRqFTGrTVUef6usF8FWNPvnxA5MKvLh1
b7hEDr5931VL/8akCuRCFRRMUhBhmB3j8pdJddo6+ZYtfFLg6HLMM58mROku
zOhzffKiwCBGaq/YNCEq5GZoW2Dc6wLB8GmhJHEhqjLdbcYPi6yCXS8WOf5S
EKKumO8NL4otLhCefVNnl74QNdMpdOby17UFMpFRRun/CFFFyRmRd/fXF/wH
TtwqRg==
          "]], 
         Line[CompressedData["
1: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
9f//i/4HX+D/0g==
          "]], 
         Line[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA7xcHRwS3F0DBq7WWlVXTv8miPGTG
uBdAB8AB73uJ0r8m4Vw0QcEXQLVtzfMpjc2/4F2d1DbSF0Avs5MU+JC+v3dt
pYhV1BdAGvWFH38ou78Ofa08dNYXQD9icsB0ybe/PZy9pLHaF0DJ45BS9yex
v5ra3XQs4xdAcfc1pvZikb9UVx4VIvQXQGuL2ZgVdLM/62YmyUD2F0AooPvx
a0K2P4J2Ln1f+BdA4TdbNkoHuT+xlT7lnPwXQOa6GuHbdL4/DtRetRcFGECm
VWb3nnDEP8hQn1UNFhhATuAhLoMIzj9qxOW+BxgYQOPDko1SFc8/DTgsKAIa
GEAQA19/Sg/QP1Ifufr2HRhAMskQ+00T0T/b7dKf4CUYQNpHobHpBtM/7ooG
6rM1GEC2nsh7AKHWP5D+TFOuNxhAXajPNG0N1z8zcpO8qDkYQPdGRw1meNc/
eFkgj509GEA0sOI3EErYPwIoOjSHRRhAxGqdLNHc2T8VxW1+WlUYQFeHMEs4
xNw/uDi051RXGEDNSIDdrBvdP1qs+lBPWRhAeZNZGflx3T+ek4cjRF0YQGEa
KcApG94/KGKhyC1lGEBGvL06YWDfPzz/1BIBdRhA15AP/tPc4D/echt8+3YY
QGEn1I8/AOE/geZh5fV4GEBCcvJMNiPhP8bN7rfqfBhAnlpjNcxn4T9PnAhd
1IQYQEYJdMzI6+E/Yjk8p6eUGEDrraUEaeDiP2ntzfXclhhAhtylxZ8A4z9w
oV9EEpkYQEcwJCVkIOM/fwmD4XydGEB7E8hDnV7jP5zZyRtSphhArfRAywPW
4z/WeVeQ/LcYQGUon2QesuQ/3S3p3jG6GEDjMbXz/8vkP+Thei1nvBhAnZxa
pInl5D/zSZ7K0cAYQAfRcg+bF+U/EBrlBKfJGEAa+y4r3HflP0q6cnlR2xhA
0DrIoPQp5j9RbgTIht0YQG939vf0PuY/WCKWFrzfGECvq7BQsVPmP2eKubMm
5BhAskoyQWJ85j+EWgDu++wYQDvu06zByuY/vvqNYqb+GEBNjkZtTFznP8Wu
H7HbABlAau8xSoJt5z/MYrH/EAMZQI5u4w+Dfuc/28rUnHsHGUDHyCCD6J/n
P/iaG9dQEBlABvZNg1jg5z//Tq0lhhIZQFz6ozr77+c/BgM/dLsUGUCpnJPc
bv/nPxRrYhEmGRlAij42o8sd6D8bH/RfWxsZQAnQyCG2LOg/ItOFrpAdGUB0
p9E+dDvoPyqHF/3FHxlAecfmnwZK6D8xO6lL+yEZQMMPx+dtWOg/e7vC1Q==

          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, 2 Pi}, {-0.30209865300883726`, 0.9438607329934134}},
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.30209865300883726`, 0.9438607329934134}}, {{
     0, 6.283185307179586}, {-0.30209865300883726`, 0.9438607329934134}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8268795011541777`*^9, 3.8268795445057783`*^9, 
  3.826882412332954*^9, 3.826883914892969*^9, 3.826884053144969*^9, 
  3.826884177379849*^9, 3.827148111068645*^9, 3.827148291091937*^9, 
  3.8281854129672422`*^9, 3.918385786031508*^9, 3.918388879317193*^9, 
  3.918388962226036*^9, 3.918389170438634*^9, 3.9184492723042307`*^9, 
  3.919750239315654*^9, 3.920521802918065*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"a1fad8d0-c115-44c2-a564-19208e331171"]
}, Open  ]],

Cell["\<\
Now need to solve for the dot product equal to the cosine of the rotation \
angle - see figures above - and set to 45 degrees earlier.\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}, {3.826814529262599*^9, 3.82681453488409*^9}, {
  3.826881054005064*^9, 3.8268812009759903`*^9}, {3.826881261411744*^9, 
  3.8268813134652967`*^9}, {3.826881349832652*^9, 3.826881616309972*^9}, {
  3.826882101275858*^9, 3.8268821624658403`*^9}, {3.82688247546229*^9, 
  3.82688247864517*^9}, {3.82688252278053*^9, 3.826882538635483*^9}, {
  3.8268827448361387`*^9, 
  3.8268827530594387`*^9}},ExpressionUUID->"ba8226a4-d734-4eac-8060-\
8270f0f06f37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"asoln", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"cosang", " ", "\[Equal]", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"Pi", "/", "4"}], "]"}]}], ",", " ", "\[Phi]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8268796398060217`*^9, 3.826879690826521*^9}, {
  3.826879778544623*^9, 3.8268797800539293`*^9}, {3.826883593541399*^9, 
  3.82688359676475*^9}, {3.82688362890703*^9, 3.826883640073923*^9}, {
  3.8268836952727423`*^9, 3.8268836965757227`*^9}, {3.826883762774481*^9, 
  3.8268837644960747`*^9}, {3.8268839276403303`*^9, 3.826883928607019*^9}, {
  3.826883963286531*^9, 3.826883966685503*^9}, {3.8268840619305468`*^9, 
  3.826884088393145*^9}, {3.826884339856151*^9, 3.826884340636125*^9}, {
  3.826884412540222*^9, 3.826884413442025*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"3e3ef01b-984f-4794-84d1-f0034246d121"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 37, 1, 27453930263165980080, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.826879692019787*^9, 3.82687978097561*^9, 3.8268824179164553`*^9, 
   3.826882543887141*^9, 3.8268836078902817`*^9, 3.826883641235499*^9, 
   3.82688370261207*^9, 3.826883770962652*^9, 3.8268839299204893`*^9, 
   3.826883971218626*^9, {3.826884067890381*^9, 3.826884095895269*^9}, 
   3.826884183402027*^9, 3.826884415242042*^9, 3.8271479357722*^9, 
   3.827148117378457*^9, 3.8271482083079433`*^9, 3.827148296159607*^9, 
   3.8281854208904676`*^9, 3.918385793634425*^9, 3.9183888861714277`*^9, 
   3.918388971582346*^9, 3.918389170478566*^9, 3.918449272350368*^9, 
   3.919750239367598*^9, 3.920521803002314*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"f33ba054-5097-4ab1-9fdb-ca067da99b3a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"-", "0.9019608527629567`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", 
     RowBox[{"-", "0.05644700885580263`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", "2.2396318008268365`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", "\[Rule]", "3.0851456447339904`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.826879692035096*^9, 3.826879780982964*^9, 3.826882417928565*^9, 
   3.826882543895233*^9, 3.826883607898464*^9, 3.8268836412437267`*^9, 
   3.8268837026211452`*^9, 3.826883770971945*^9, 3.8268839299391003`*^9, 
   3.826883971231118*^9, {3.8268840679058228`*^9, 3.82688409591669*^9}, 
   3.826884183423403*^9, 3.826884415251554*^9, 3.827147935781745*^9, 
   3.8271481174320803`*^9, 3.8271482083177853`*^9, 3.8271482961811647`*^9, 
   3.828185420895377*^9, 3.9183857936383133`*^9, 3.918388886178464*^9, 
   3.918388971586587*^9, 3.918389170482692*^9, 3.918449272354501*^9, 
   3.919750239371155*^9, 3.920521803007042*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"c4fca6e7-197c-468e-8a0d-677ccc92968c"]
}, Open  ]],

Cell["\<\
There are four solutions - we want the one with the smallest angle - we are \
supposed to be close to the pole. Check that the solution reproduces the \
vector values of pa:\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}, {3.826814529262599*^9, 3.82681453488409*^9}, {
  3.826881054005064*^9, 3.8268812009759903`*^9}, {3.826881261411744*^9, 
  3.8268813134652967`*^9}, {3.826881349832652*^9, 3.826881616309972*^9}, {
  3.826882101275858*^9, 3.8268821624658403`*^9}, {3.82688246303892*^9, 
  3.826882465110845*^9}, {3.826882546475655*^9, 
  3.8268826382795067`*^9}},ExpressionUUID->"a93d9984-ee77-48d4-88d2-\
a565c994bb89"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"pasoln", " ", "=", " ", 
  RowBox[{"gcc", " ", "/.", " ", 
   RowBox[{"asoln", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"pa", "/.", "pavals"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pasoln", " ", "-", " ", "pa"}], "/.", "pavals"}]}], "Input",
 CellChangeTimes->{{3.826879751927182*^9, 3.826879805214013*^9}, {
  3.826880431818136*^9, 3.826880434538315*^9}, {3.826880701718832*^9, 
  3.826880712652829*^9}, {3.8268808159294024`*^9, 3.82688082632812*^9}, {
  3.826883652225915*^9, 3.826883653345834*^9}, {3.8268839434877443`*^9, 
  3.826883943590437*^9}, {3.826884073170776*^9, 3.826884073289792*^9}, {
  3.827147944075416*^9, 3.827147945144994*^9}, {3.8271482171833878`*^9, 
  3.827148218828332*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"df5e2e97-893f-439e-82f0-4f78f1deb469"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.01895544024559989`", ",", "0.0707426660764375`", ",", 
   "0.9973144772244577`"}], "}"}]], "Output",
 CellChangeTimes->{{3.826879794800185*^9, 3.826879806088187*^9}, 
   3.8268804360111723`*^9, 3.8268807140056133`*^9, 3.826880827485991*^9, 
   3.82688264261036*^9, 3.826883655180628*^9, 3.826883706832258*^9, 
   3.826883775707841*^9, {3.826883946055628*^9, 3.826883974261991*^9}, {
   3.826884074419764*^9, 3.82688409875895*^9}, 3.8268841887784758`*^9, 
   3.826884419252738*^9, 3.827147949708467*^9, 3.827148122441003*^9, 
   3.8271482223523483`*^9, 3.827148301495201*^9, 3.828185429305223*^9, 
   3.91838580325564*^9, 3.918389170485833*^9, 3.918449272358279*^9, 
   3.919750239374167*^9, 3.92052180301128*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"b83af004-8ae9-4c8e-b21a-a2c5c81de39b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.018955440245603854`", ",", "0.07074266607642947`", ",", 
   "0.9973144772244581`"}], "}"}]], "Output",
 CellChangeTimes->{{3.826879794800185*^9, 3.826879806088187*^9}, 
   3.8268804360111723`*^9, 3.8268807140056133`*^9, 3.826880827485991*^9, 
   3.82688264261036*^9, 3.826883655180628*^9, 3.826883706832258*^9, 
   3.826883775707841*^9, {3.826883946055628*^9, 3.826883974261991*^9}, {
   3.826884074419764*^9, 3.82688409875895*^9}, 3.8268841887784758`*^9, 
   3.826884419252738*^9, 3.827147949708467*^9, 3.827148122441003*^9, 
   3.8271482223523483`*^9, 3.827148301495201*^9, 3.828185429305223*^9, 
   3.91838580325564*^9, 3.918389170485833*^9, 3.918449272358279*^9, 
   3.919750239374167*^9, 3.9205218030119762`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"6622d050-c49b-492c-9a17-064c7bdf40d8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3.9621084191310274`*^-15"}], ",", "8.03523914072457`*^-15", 
   ",", 
   RowBox[{"-", "4.440892098500626`*^-16"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.826879794800185*^9, 3.826879806088187*^9}, 
   3.8268804360111723`*^9, 3.8268807140056133`*^9, 3.826880827485991*^9, 
   3.82688264261036*^9, 3.826883655180628*^9, 3.826883706832258*^9, 
   3.826883775707841*^9, {3.826883946055628*^9, 3.826883974261991*^9}, {
   3.826884074419764*^9, 3.82688409875895*^9}, 3.8268841887784758`*^9, 
   3.826884419252738*^9, 3.827147949708467*^9, 3.827148122441003*^9, 
   3.8271482223523483`*^9, 3.827148301495201*^9, 3.828185429305223*^9, 
   3.91838580325564*^9, 3.918389170485833*^9, 3.918449272358279*^9, 
   3.919750239374167*^9, 3.920521803012476*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"77535128-d70e-4d2c-8549-4fee7dbeac53"]
}, Open  ]],

Cell["\<\
It does, now calculate the solution for Dec and HA of the polar axisL:\
\>", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}, {3.826814529262599*^9, 3.82681453488409*^9}, {
  3.826881054005064*^9, 3.8268812009759903`*^9}, {3.826881261411744*^9, 
  3.8268813134652967`*^9}, {3.826881349832652*^9, 3.826881616309972*^9}, {
  3.826882101275858*^9, 3.8268821624658403`*^9}, {3.826882661390787*^9, 
  3.826882690765565*^9}},ExpressionUUID->"0a0ddadc-d659-4f63-8ae0-\
df18fe4e1614"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decpas", " ", "=", " ", 
  RowBox[{
   RowBox[{"ArcSin", "[", 
    RowBox[{"pasoln", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "]"}], "*", 
   RowBox[{"180", "/", "Pi"}]}]}]], "Input",
 CellChangeTimes->{{3.82687982427003*^9, 3.826879863931551*^9}, {
   3.826880204803396*^9, 3.826880252828704*^9}, {3.826880317534601*^9, 
   3.826880487443922*^9}, {3.826883665209156*^9, 3.82688366591322*^9}, 
   3.8271479834998903`*^9, 3.8271483091719418`*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"2b4bfa63-6715-4d18-97c7-50eb4ef75bf2"],

Cell[BoxData["85.79999999999964`"], "Output",
 CellChangeTimes->{
  3.8268798652924957`*^9, {3.8268802175098267`*^9, 3.826880253510988*^9}, {
   3.826880348975124*^9, 3.826880403274822*^9}, 3.826880456805484*^9, 
   3.826880490711034*^9, 3.826882697644936*^9, 3.82688366686154*^9, 
   3.826883709444891*^9, 3.826883778458145*^9, {3.826883954124464*^9, 
   3.826883977872191*^9}, {3.82688407860415*^9, 3.826884103448517*^9}, 
   3.826884196558885*^9, 3.826884425074593*^9, 3.827147965710863*^9, 
   3.827148046285112*^9, 3.827148127719762*^9, 3.827148226472808*^9, 
   3.8271483144486113`*^9, 3.828185434760681*^9, 3.918385814782304*^9, 
   3.9183891704933767`*^9, 3.9184492723680058`*^9, 3.919750239377863*^9, 
   3.9205218030214043`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"6f445075-b34d-49fc-8a4f-dff94602d019"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hapas", " ", "=", " ", 
  RowBox[{
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"pasoln", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{"pasoln", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "*", 
   RowBox[{"180", "/", "Pi"}]}]}]], "Input",
 CellChangeTimes->{{3.8268804959591427`*^9, 3.826880540044037*^9}, {
  3.82688078887431*^9, 3.826880792111573*^9}, {3.8271479707850237`*^9, 
  3.827147986168343*^9}, {3.9183858428115673`*^9, 3.918385860668561*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"96a66f9c-68e5-4fd7-8025-c3a1b39fec38"],

Cell[BoxData["14.999999999995378`"], "Output",
 CellChangeTimes->{{3.8268805331336727`*^9, 3.826880541278961*^9}, 
   3.8268807932035*^9, 3.826882700496379*^9, 3.8268836812709713`*^9, 
   3.826883716500886*^9, 3.82688378088385*^9, {3.8268839567051687`*^9, 
   3.826883980147457*^9}, {3.826884081147435*^9, 3.82688410569083*^9}, 
   3.826884199266721*^9, 3.826884428329254*^9, 3.827148049002249*^9, 
   3.827148131359322*^9, 3.827148231224761*^9, 3.827148318397004*^9, 
   3.828185438463224*^9, 3.918385875317704*^9, 3.9183891704967318`*^9, 
   3.918449272371204*^9, 3.919750239386244*^9, 3.9205218030246067`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"ceb25205-bf1e-4a6f-940d-33154576bbab"]
}, Open  ]],

Cell["Have managed to recreate solution as required!", "Text",
 CellChangeTimes->{{3.8266203308161182`*^9, 3.826620482047701*^9}, {
  3.826620725259325*^9, 3.826620747113813*^9}, {3.826620787343689*^9, 
  3.826620946279244*^9}, {3.826814529262599*^9, 3.82681453488409*^9}, {
  3.826881054005064*^9, 3.8268812009759903`*^9}, {3.826881261411744*^9, 
  3.8268813134652967`*^9}, {3.826881349832652*^9, 3.826881616309972*^9}, {
  3.826882101275858*^9, 3.8268821624658403`*^9}, {3.826882714942327*^9, 
  3.826882728844122*^9}},ExpressionUUID->"70471a5f-0745-481e-9438-\
73d8a4899028"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.826880775566174*^9, 3.8268807849848423`*^9}, {
  3.82688273208414*^9, 3.826882732852007*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"dd53bbcc-8590-4b84-8132-6ba205ec6e6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VectoHADec", "[", "passoln", "]"}]], "Input",
 CellChangeTimes->{{3.918385901789*^9, 3.918385951922797*^9}, {
  3.91838599634792*^9, 3.9183859974287*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"5ace15cc-3407-4f68-ae02-424ec43d2dc9"],

Cell[BoxData[
 RowBox[{"VectoHADec", "[", "passoln", "]"}]], "Output",
 CellChangeTimes->{3.918385999049871*^9, 3.918389170501186*^9, 
  3.9184492723761*^9, 3.91975023939098*^9, 3.920521803037591*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"3b24cdbc-fe42-45c8-9e3e-016da6ff4f1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VectoAltAz", "[", 
  RowBox[{"pa", "/.", "pavals"}], "]"}]], "Input",
 CellChangeTimes->{{3.918387911595202*^9, 3.918387950891868*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"5af9c351-01f9-45f9-9917-3b2b404125b4"],

Cell[BoxData[
 RowBox[{"VectoAltAz", "[", 
  RowBox[{"{", 
   RowBox[{
   "0.018955440245603854`", ",", "0.07074266607642947`", ",", 
    "0.9973144772244581`"}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.918387918015731*^9, 3.918387951657193*^9, 
  3.918389170503907*^9, 3.918449272378931*^9, 3.919750239393708*^9, 
  3.920521803040711*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"130cefd8-2bbd-42a4-8ab4-ecda1101b794"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.0010341649740236688", "*", 
  RowBox[{"180", "/", "Pi"}]}]], "Input",
 CellChangeTimes->{{3.918387997301152*^9, 3.918388037027186*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"44c5b006-5311-437f-9f31-791fdad5e038"],

Cell[BoxData["0.059253288331812634`"], "Output",
 CellChangeTimes->{{3.918388012214425*^9, 3.9183880381428337`*^9}, 
   3.9183891705064783`*^9, 3.918449272388579*^9, 3.919750239403098*^9, 
   3.92052180304373*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"3831021d-12ee-4e03-ad58-70689328a88f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["v2"], "Input",
 CellChangeTimes->{{3.9183892637491417`*^9, 3.918389266915052*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"74b54bc0-6ebf-4649-aca5-fa2a303a3d73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.30429148596179095`"}], ",", "0.36057439513543893`", ",", 
   "0.8816988131691441`"}], "}"}]], "Output",
 CellChangeTimes->{3.9183892682295227`*^9, 3.918449272391938*^9, 
  3.91975023940597*^9, 3.9205218030469313`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"4c881250-0dd1-4f91-a81b-8c03a4caf0e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ArcSin", "[", 
   RowBox[{"v2", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], "*", 
  RowBox[{"180", "/", "Pi"}]}]], "Input",
 CellChangeTimes->{{3.918389524563777*^9, 3.9183895645086327`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"22510faf-bf65-436c-be51-b24dbd384dc8"],

Cell[BoxData["61.84797415974939`"], "Output",
 CellChangeTimes->{{3.918389536200684*^9, 3.918389565043519*^9}, 
   3.9184491237771177`*^9, 3.918449272394762*^9, 3.91975023940867*^9, 
   3.9205218030558443`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"e7c257ed-eba9-4335-af41-7615a8fa67d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ArcTan", "[", 
   RowBox[{
    RowBox[{"v2", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
    RowBox[{"v2", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "*", 
  RowBox[{"12", "/", "Pi"}]}]], "Input",
 CellChangeTimes->{{3.91838963248206*^9, 3.918389678518859*^9}, {
  3.9183897174751863`*^9, 3.918389720400846*^9}, {3.918448795750355*^9, 
  3.918448796831442*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"ef3b0437-4df8-49a9-a3ff-073b03be8e1e"],

Cell[BoxData[
 RowBox[{"-", "2.67741834408685`"}]], "Output",
 CellChangeTimes->{{3.918389658850174*^9, 3.91838967930867*^9}, 
   3.91838972137506*^9, 3.9184487977929173`*^9, 3.918449127322679*^9, 
   3.9184492724009857`*^9, 3.9197502394141273`*^9, 3.9205218030590553`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"c8506b90-00c6-445f-b38c-da9a9c23fe61"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p0", " ", "=", " ", 
  RowBox[{"p1", "/.", "p1vals"}]}]], "Input",
 CellChangeTimes->{{3.918448584209751*^9, 3.918448665913872*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"2905229a-c571-4c15-a297-0ba00bc1c9af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["1", "2"], ",", 
   FractionBox[
    SqrtBox["3"], "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.9184485862123747`*^9, 3.918448666850524*^9}, 
   3.9184492724083*^9, 3.9197502394215927`*^9, 3.920521803068218*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"69e136a5-ec84-4d55-822a-c05709cefc2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ArcSin", "[", 
   RowBox[{"p0", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], "*", 
  RowBox[{"180", "/", "Pi"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ArcTan", "[", 
   RowBox[{
    RowBox[{"p0", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
    RowBox[{"p0", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "*", 
  RowBox[{"180", "/", "Pi"}]}]}], "Input",
 CellChangeTimes->{{3.9184486811693773`*^9, 3.918448712661867*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"5a223ca5-b629-4493-a999-c65bcaa2000a"],

Cell[BoxData["60"], "Output",
 CellChangeTimes->{3.9184487142288933`*^9, 3.91844927241848*^9, 
  3.919750239424667*^9, 3.920521803072097*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"63f13a48-b465-4733-8cd0-0821c8055682"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9184487142288933`*^9, 3.91844927241848*^9, 
  3.919750239424667*^9, 3.920521803072735*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"1dba0e22-678c-4f0a-804a-b5434250b9b0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.918448694327078*^9, 3.918448709768922*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"c7fd9abb-431f-4cf9-b3fb-7b4b1f6fa3f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alternative numerical solution", "Section",
 CellChangeTimes->{{3.826441782781355*^9, 3.826441793540408*^9}, {
  3.8268808418468018`*^9, 3.8268808452311974`*^9}, {3.919750287146515*^9, 
  3.919750288360508*^9}},ExpressionUUID->"5730f75c-560f-4821-95a7-\
3ad8a1bbceb3"],

Cell["\<\
Try alternative to cross product where we calculate the component of the \
vectors v1 and v2 which are perpendicular to tpa and look at the angle \
between them.
\
\>", "Text",
 CellChangeTimes->{{3.919750306724846*^9, 
  3.9197503685782127`*^9}},ExpressionUUID->"106ba7f1-cf81-41ea-883d-\
949ec3217dfb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a1a", " ", "=", " ", 
   RowBox[{"v1", " ", "-", " ", 
    RowBox[{
     RowBox[{"gcc", ".", "v1"}], " ", "gcc"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2a", " ", "=", " ", 
   RowBox[{"v2", " ", "-", " ", 
    RowBox[{
     RowBox[{"gcc", ".", "v2"}], " ", "gcc"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cosanga", " ", "=", " ", 
   RowBox[{
    RowBox[{"a1a", ".", "a2a"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a1a", ".", "a1a"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"a2a", ".", "a2a"}], ")"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.91975038945967*^9, 3.919750462930335*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"4527b343-5768-4ebc-a299-efff0e867d8c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", " ", "[", 
  RowBox[{"cosang", ",", " ", "cosanga", ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", " ", "0", ",", " ", 
     RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919750477149663*^9, 3.919750495958761*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"163924bb-964e-4f1f-a864-b526598f0650"],

Cell[BoxData[
 TemplateBox[{
  "Plot", "nonopt", 
   "\"Options expected (instead of \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\
\[Phi]\\\", \\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"2\\\", \\\" \\\", \\\
\"\[Pi]\\\"}]}], \\\"}\\\"}]\\)) beyond position \\!\\(\\*RowBox[{\\\"2\\\"}]\
\\) in \\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{\\\"cosang\\\", \
\\\",\\\", \\\"cosanga\\\", \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"\[Phi]\\\", \\\",\\\", \\\"0\\\", \\\",\\\", RowBox[{\\\"2\\\", \
\\\" \\\", \\\"\[Pi]\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\). An option must \
be a rule or a list of rules.\"", 2, 57, 2, 27453930263165980080, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.919750497023588*^9, 3.9205218031095457`*^9},
 CellLabel->
  "During evaluation of \
In[57]:=",ExpressionUUID->"6fc5159d-db7a-4231-9af4-642e7307ba38"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"cosang", ",", "cosanga", ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.920521803112903*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"249dce2e-a511-45b8-a9d0-12a95c2778bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"cosang", " ", "-", "cosanga"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.919750501628622*^9, 3.91975051984375*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"33dc5c9f-d96b-40ea-9373-d6700ac34091"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJxNl3s01HkfxyfX0tbjttuQNFqXDeEcJZNfcsmUzeVZCTFyrchkxhbLrPt6
iNya0KwIYVLaEmLW/pYhNCqZHrSkJEnIYUauIzy7z2m+n5zjOK/z+rzf38/3
+/uLlj/d5aQUgUAY+fv3n7/STQpP3+5JsCT8/6cY0xlvtNC87HNAwuIq48B+
Fh3xO9WgxTpW3GcmEF5QklrKWVmIe31YeoWsIsQuNLUXbNZdSR6/NEOtyWM1
IW/R9r2CzTkB6mcwnfxqGH1o/iz3ZKbUt0OfmYv3jNlvuOE/gnya8Tyh7vgY
yocZ8HN55ZPIiwNC7rwKFSLv/6fbv7NPzaDzA0Q9PN6FWcTpJvV0TvL8Z67C
pXj1e5OYi8jf2qTMWUlcRP0uXjTVny5KuAoTV7QnCi8jj5XOk0TBBTB/cFfa
LedG6JtkjhA72iGfw7dMsekC/y7gY8CeIchn3nP8750x8GZrN6y+E4FPzqdu
2yq1hN7LaKzuYo7CEtrn+R4l8SYVxHjsLyFBKVuXUJ/es7bnBO0ltI9Ak2TH
NAQfSWPWfNwN/aSGHq2z+8Hz5Y2zR+0gzziWuurjBOcRS9/S+t1QHuMJ9w+4
+EA+2JJt/+Q0yuPK6TP1dgzwDf0Ouk2RwArh66SrU4GrW7zCDFjAnop1r8vy
oU/qhKKTZin4ysoz+JVK2Md1qVVfqRb2/0TZ/msaDvNlOVHyMm3ADsPd4TGd
0J/pzBk7rCSG71NIcG9RAx6c8Gyz2CFG/cbJ/7puZApegEd6qR4To+8VqdDd
keENnuSxy1z+FPI44+MbVXEEeKI19su5OMjzMvNEkyngg14KfU5lAyvpH3n6
mi1G33NUvkiJXwy+4d2Ma1UF8ljWAwqbXQXzgSX5A/Fc2IccN6UZzEP3wzd7
2/j/wId9uMSJMa0+6M+Y32+oMAR9/j2X6DPvwW/MJs+3LACfkE+VDtyyjPpM
372kOGxHjK9/YJK2W28Z9b0qTurUMF5G+erYPkXZvcCy83qaHDfI3x5pNx/L
BU5oUY8WFC6j+7gVhzZxy4EJ1G8oqfdh/mj3yaP6vbCfuFkmlKb6CfnDRTal
QtYndH4KX/Aq8Sr4dtEJ4tdliDG7gz9nkO8D24zX/JT4F+QxUx0HVY0VtM/P
1JpkjjZirOE/1s3mu1bQvPhO1/KjPTBP7vM287aE+ch1k4xpCniuPrMywRm8
WUweieMrYR4WztH2Mg+G/tqu6txHYSto39lFKwGVCX2mO7oUphMlzMV+POJt
l3AR5qvPf4hTyQEWFUY1lBdAv8lD+bm95SiP04W5xo9+g/3uqGmfodZBfsqm
umyqETG+i2b1Ov4heFruUzUVAeRvN1Jdy/tgXl8pqqNjHFjba6LQy2gV3WfL
9BNKXP0q8uxLTX7jTatoX+Lu6uijfPDEqCvVev3g1aX9NQVi5LH8clfyPuk1
tM/Ww4dcyzauofcqmCDTN6sixjUyDNMiNdZQn+aWhTmSJeSv/T6ueJGCGN9O
fWkw5wRcvPqU4uO+hvYjlTT7dfgAF9vWRpsGwflao5wrhQzksR0G6Z1hCXD+
9c7YsYFU6P+WESZNYcG89n03snopzJe527smVQLriC3oUzVwPqfAKM0DB697
QKu8pRX24bxR4Rl2Qr9uktxAXu8XXndpjjAIfXodHxRDRqGvImTQoHcK+LvN
zygHFuD9Kqoe+N1cg/fO2enVuEGGYCXp62H2PLZcL2EupvrEsf/cVxImEHJD
rWZfqQLn1ejoV+sAP5cp2vt+J/A3bkQ7DSPov7Ko4JtsBtxnn3T2j33AxKsr
TKEl5D0mIy7o2IJn7xfmeh6ScBXWlxlcmnUEeYw4NFzV6gz8a2LvYyMP6HvR
7dQfQIU+dR3+KNsXvGeE9WxnIHD+w4Z10sES5uHCoaqoaRrkD4k5ogEG2ge/
plIYzD8P+VnDy29qI4G/p6QeL4mG/Up84p5lxAMvRobbM5Ng3okV0nzqAnyP
sko/8tF0OH+51f3egWyYdxl03GmYA1yxYFtCZMP8quI+NdkC8Mf0TS6JimD/
27a6GwZLYV7KWyPh0Q14b48I5aW6SvB3s9aHld6F/akts77R9dBfp9dpZfQQ
/FfWD7jqj8EHeP5uIt8FrJhRThp6Dv0hMzEE1ihwy8bzkbETX3xvnTPCM1Pg
6Za+Qe4zcJ92d7ch23nYXyPMwcNEDOedS7MRaKwCk/404s3JrkPck/I67rgO
MLbNeo0UKOFizPXq6dFSGnCIWmanbjhw/tcDVw2TIb+4KdzcvAJ5vHa1Isx5
EthgSHEk5rwUmv+tQjno/o/Sn7kCix707jZIlkE+DDM/ci1HFt2XEJoTl8WW
MBfPLBLWxBeAvyV1UyOgTMLF+DBfbUqvFtj12HL2ve4vfLJ72/W/EGMMbs3S
5QEJ//3/xVaaf8RbmFd35Oedfg/nVcRqP/b4APNmVfFr9tOwX9ubl6YWHyXc
irmqkIMMFyA/fDC3YNsyMCNCJNi8BvnVG46yBGk5icfS+2+SRXKIcfWNcqHD
ChL+5wX9r3dvhvk0Os2SrixnFSNYWb+puBn/H2gYJi0=
          "]], LineBox[CompressedData["
1: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
          "]], LineBox[CompressedData["
1:eJxF0A0slHEcB/DHKbJ1eUnebjqukVpvVok8xHaplXR0FyldXdHkJRlh5Vhy
1yy5KEUnruWqhbnrlJc/UW55yZKOdEcxmZaXWDJ57WX9n9+zPXv22ff38v8/
9oJzAaE0giC4f96/326F+4RFlaVXcvv8MnpRAzqhZFsNVlt6Ef+eIjTd4PtG
vxZbQma946ayXmCXIMf+Y9u8G8C146e/8l9hV5JcIkoqVGOr0IhxPKfgNfYz
lMZMXoKaYb7N5vRKbSvMU3pmRv5qg/P0hRRoXDqwU1FCVPFVngabIFYkl5Jx
XdhyJL9WMZ7djV2BPKS1DxRa7HqkeaIOau/BRiiypm3590/YiUi/tbOe3o/N
Qfna3rgNA9iliBu4ehVrEjsGDYc5NntNYd8nL1/YlMyfhvvbiFychTPYUqS4
5TkonYPz7S32yatZwFaiPpXfAS1h9d8PUELjYb1fNOxH5ArN8QrLpVROFg+E
hbsYYksQ+SPalmcEjjBLSc+mYxeRNJbYTWGMTRD5zlmjb02h3tn7tmxsJfYd
solTyKNbYNehs42DdYZW2EpEd93gRLOB+eVPYm/MMajzogBm1cyULeybzF48
NcGEfbkGPm3D9lCvG+0o7HOg5iHhSWsj3Vrot+vkx3aug/7TaITdshFbhcYy
DL493Q79kgXfQ2U7oH9rbA565AZOPGKXVeAB82hOO7eJd1MmV6mjhME8qK90
VQ1xA2FfcMkM5+AR6L+XI17DDoF6J4GsaWModjlJLmrM9OIhF7iRDx/ehP8X
Ptr2sycX8hgZn22WB/dJ5E1k77kLeYpRWv+lAmo+EtWab1EWQn79vFw4JANL
PzYzAuTgrqRAydxz8L7q2CR/Hezzj17SJOoFB7FyLdBnOO+ZjKqnjl+g/0ow
MTY7Aq6byRTIF6BfXcZU6AhrKn8jUCya6FtTua5FI71oiF2OpvMZHzgm4EW/
UgeRGfQb6O+KqzGncpL+vP3luAXk5hECU0draj7JYE7yjzIgZ71PL5PYgteL
LefVTKh3dn+8f9Ye8t/wPGeE
          "]], 
         LineBox[{{5.910970924903065, -4.891975408147437*^-16}, {
          5.911812066338477, -4.440892098500626*^-16}, {
          5.913882314934667, -2.7755575615628914`*^-16}, {
          5.922163309319426, -2.7755575615628914`*^-16}, {
          5.924233557915616, -1.1102230246251565`*^-16}, {5.926303806511806, 
          1.6653345369377348`*^-16}, {
          5.928374055107996, -2.7755575615628914`*^-16}, {
          5.9299526608398745`, -4.891975408147437*^-16}}], 
         LineBox[{{5.892597550966447, -4.891975408147437*^-16}, {
          5.893179828972768, -3.3306690738754696`*^-16}, {5.895250077568958, 
          1.1102230246251565`*^-16}, {5.897320326165148, 
          5.551115123125783*^-16}, {
          5.8993905747613375`, -3.3306690738754696`*^-16}, {
          5.901460823357528, -1.1102230246251565`*^-16}, {
          5.903531071953718, -5.551115123125783*^-17}, {
          5.905601320549907, -1.6653345369377348`*^-16}, {
          5.907671569146097, -5.551115123125783*^-17}, {
          5.9094686828176695`, -4.891975408147437*^-16}}], 
         LineBox[{{2.7603073193573557`, -4.891975408147437*^-16}, {
          2.7610894076824213`, -4.440892098500626*^-16}, {2.7630143125663063`,
           0.}, {2.7649392174501912`, -3.885780586188048*^-16}, {
          2.766864122334076, -3.3306690738754696`*^-16}, {
          2.768789027217961, -3.3306690738754696`*^-16}, {2.770713932101846, 
          1.1102230246251565`*^-16}, {2.772638836985731, 
          2.220446049250313*^-16}, {2.7745637418696165`, 
          5.551115123125783*^-17}, {2.776488646753502, 
          2.220446049250313*^-16}, {2.778413551637387, 
          5.551115123125783*^-17}, {2.780338456521272, 
          1.1102230246251565`*^-16}, {
          2.7818251154847706`, -4.891975408147437*^-16}}], 
         LineBox[{{2.782821128940194, -4.891975408147437*^-16}, {
          2.784188266289042, -5.551115123125783*^-17}, {
          2.7856921173727742`, -4.891975408147437*^-16}}]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
             "]], 
            Line[CompressedData["
1:eJxNl3k01Xkfx6/Jct3qli1bxFWNSpFk/ckSieqGCYncbOF6wpUl0R0UsjwG
k6wJj61EF5ex/MauKYz0UJYswwxJaCY3spR5nnP6fT/zO+ee33md9/vz/iy/
v66ii6+1+zckEmnyf7//v/dl0VwbLQQNb/R+Jm/NbcHjbPbMTJ8RNCR9faRi
InYOWhFcgmvM6kTV2xPcjFue+TCf7UxwAR4r5trkzCI4Fy8KklU2CSG4Hm8d
6kvaG0FwLW65Wa1DMgryxrCEFXIswY/wf/nMHFxNIDgdX71v4vIuieAi7Niy
fsrhVIJr8Ai6VmtwxlcOr8DbC9U+/HyP4Aac/HkfjT//KxtyMIkL2yZ3VhH1
0Zia+LAz/SXB4dhV777kO0MEV+I1rd0tw6Owz6r0k78UJglOwvVZTYoe04ix
8Ke1VmWzsF/7rsqIxQWCObhQcGmFziK6L2bRUzDx/TLkJ+7JEXmyRjAXexGW
ZrSFJITuK96fxLLmJzgdO38gLi+djBjPirz5YmwLweHY2FAY3x4R8NMOBx32
liCYRHK/7etcIU0wFy8Z90xeloN+c5ouLfo0YP+pc4qd+4HDjXUnJvWAM9f5
ncWdCC7Be/0yLwXng37P+5SGWysw8/K6kNUkML+j0+P9NDKaT8eM9mU0D/iZ
qU6JYbYwumdhRYbOZCkF6cw1h/2DjykoT81UXranioL8+GD+el0DcN9GaVNy
F9Tz0RtNjd4hHXuSFq6p9R70hAnjbw8uonzM+oCAlNIy9JMK/IUsvQY81hi7
Qt0ALiCfnuXftBnlM62pr1cFNyNdNbu3608KwSQSbyoFn6YiP16valM2Igp8
om0o8akM+C/OTlrl7gedplFofPcQ8MwNjyMJ6uAv/2Xf7khN0ANE5sSv6cJ8
ug7lAj7HYD5Sod+SqzHo8dofB85aQF5dtJDThhcwu/cZ/eMVYBOZBIN3LIJr
MYobXW0iEPJ7y7YrDoQgxt70S/9RHgv6I/mR/oJ/Q39/z5yOzGTI/7JGK47O
AL+EkgrT6QHqhyelxNs+KIN9Kd+8M+ZVQL8oloWqQQ3kkSYeyMbVA4daCpNf
NkL+UpMnb1cb6HM53/5a3QW6BzWmjtQL/SZvTBee6gcedCxkT4yA/7tufm+V
CeAePTe74CmCm3Hz0rbjrW9Bb5dRUtu6APcwiIvcef4D7FO/MkH+zxLc+6iX
0cf5VZSHcQZzJ7Q3YP7su/I/um3fgjhAVGapQR34fUTIpKAWMPOvwR4rPYJz
8alL2g3ZBqBf6k0rfnOcYA52OlHCXswG+TEligjODAb/f/nIkdI48EJZhpNl
M+QLXzigF9MOumElncfrBr3cJfVy7yjkx7fRTsVsgN8kSl/8o/FWxNXkq0W9
zwjm4CoS25kuHVTE7xOXxI+82obylWJiVH2Z21H95IXXw8ZvgE9O9a1U+4gg
vubv7rljnuBcjF6TZbEjSBTxwjozbNOSKPLbnz+1b2WZYA7WXnXg1cIK6BnM
OdXhz6geNxm88jtHQAxxVpWfhZMEYuwkM0iqTgO4qsO2o1xTDOXLK2r5F2gj
xm+HSe7K1CWYRFocWO76AQPOMQ35/rIJsHCevYrjCegfsK4zZHWS4Fp8zE4m
2swC/OZVq+r6p4G51Nfj6vR/zMNsSFC2hLzYjiwdeWvw8xTCpsXOoXyMEeb4
o7At1HcOYIYbdrCPxhG5eZ491N9P/Jwx6wB+yuzoid8u/mN+08bFlwzwj+fm
5HY5w/0s1tlnWlxhv2o7xmqNO7BClUHxIw+oj6cqnMv3Al7yIvGle0O/vIEI
rs9VqJ/uUBtPDIT5Vbjjwo+DoZ6Vn6jxPAT0miR9xvtQ0NfZc7Hb2JBndCWL
qxoOerf5irDfLaj/1ODHYKXCPMce7opLToN9b6b3cCsyQKcGqlA+3IM8pUMz
XP8iYHougxLwE/CdROrRO3Vw76GwnxncBtDd7GWreU3AIaIDjMCnwAW36NVB
QzDPqqf+pZA1mEfuc7ID67o40qfN4jvJ/BLE/ljb3m4D+XgJpDPJRfyKwjtQ
/k+5u/Xbkgl+gPXoYR3WIpKoPq42cO2EGMEc3Ozo48N6EgQ3Y/yVMx6qkpIo
v/kQLUdJGjF+o9ShX1IW8nSVUylb5AgmkaoUycE8BfD75RiVzdCAVWRDfx/Z
jfpjb9O40i/2Qr8i8YWzHcqQly7Ur3xXDdjm1lZGnDr4RfnMUtkaoMev1vF5
aMN+7Pn7w1qG0N+1zzth6CywgmVh669WkDfSPfap5TvIyzCXUq2xAd32iZX7
Qzt0L1z0eHxWjj30e97U/iLFAfwJ2BehmIuQd7JO61goA+4toMkK8HUGf2vl
w4euruBnq/7xm507+PUeyUme9oB+n5Ttzhh6AXMLk25qeMN+LFpnnfIVyDt0
f9OfO31h/llZ/b0iLPgexelBjgJX4fu6SXBSVgJgPoWUt0/ngyB/lKq0MXEN
+fHMeMejr66Dbku+690ZBvViUc/zGtmwTy+f8GBlOMyXwDamFkfCfOZroSZZ
t2A+wWvV13+Ihn6tvAXOzdvQb7dPVcnBOEn0f/BvjV6xKw==
             "]], 
            Line[CompressedData["
1:eJxF0A0slHEcB/DHKbJ1eUnebjqukVpvVok8xHaplXR0FyldXdHkJRlh5Vhy
1yy5KEUnruWqhbnrlJc/UW55yZKOdEcxmZaXWDJ57WX9n9+zPXv22ff38v8/
9oJzAaE0giC4f96/326F+4RFlaVXcvv8MnpRAzqhZFsNVlt6Ef+eIjTd4PtG
vxZbQma946ayXmCXIMf+Y9u8G8C146e/8l9hV5JcIkoqVGOr0IhxPKfgNfYz
lMZMXoKaYb7N5vRKbSvMU3pmRv5qg/P0hRRoXDqwU1FCVPFVngabIFYkl5Jx
XdhyJL9WMZ7djV2BPKS1DxRa7HqkeaIOau/BRiiypm3590/YiUi/tbOe3o/N
Qfna3rgNA9iliBu4ehVrEjsGDYc5NntNYd8nL1/YlMyfhvvbiFychTPYUqS4
5TkonYPz7S32yatZwFaiPpXfAS1h9d8PUELjYb1fNOxH5ArN8QrLpVROFg+E
hbsYYksQ+SPalmcEjjBLSc+mYxeRNJbYTWGMTRD5zlmjb02h3tn7tmxsJfYd
solTyKNbYNehs42DdYZW2EpEd93gRLOB+eVPYm/MMajzogBm1cyULeybzF48
NcGEfbkGPm3D9lCvG+0o7HOg5iHhSWsj3Vrot+vkx3aug/7TaITdshFbhcYy
DL493Q79kgXfQ2U7oH9rbA565AZOPGKXVeAB82hOO7eJd1MmV6mjhME8qK90
VQ1xA2FfcMkM5+AR6L+XI17DDoF6J4GsaWModjlJLmrM9OIhF7iRDx/ehP8X
Ptr2sycX8hgZn22WB/dJ5E1k77kLeYpRWv+lAmo+EtWab1EWQn79vFw4JANL
PzYzAuTgrqRAydxz8L7q2CR/Hezzj17SJOoFB7FyLdBnOO+ZjKqnjl+g/0ow
MTY7Aq6byRTIF6BfXcZU6AhrKn8jUCya6FtTua5FI71oiF2OpvMZHzgm4EW/
UgeRGfQb6O+KqzGncpL+vP3luAXk5hECU0draj7JYE7yjzIgZ71PL5PYgteL
LefVTKh3dn+8f9Ye8t/wPGeE
             "]], 
            
            Line[{{5.910970924903065, -4.891975408147437*^-16}, {
             5.911812066338477, -4.440892098500626*^-16}, {
             5.913882314934667, -2.7755575615628914`*^-16}, {
             5.922163309319426, -2.7755575615628914`*^-16}, {
             5.924233557915616, -1.1102230246251565`*^-16}, {
             5.926303806511806, 1.6653345369377348`*^-16}, {
             5.928374055107996, -2.7755575615628914`*^-16}, {
             5.9299526608398745`, -4.891975408147437*^-16}}], 
            
            Line[{{5.892597550966447, -4.891975408147437*^-16}, {
             5.893179828972768, -3.3306690738754696`*^-16}, {
             5.895250077568958, 1.1102230246251565`*^-16}, {5.897320326165148,
              5.551115123125783*^-16}, {
             5.8993905747613375`, -3.3306690738754696`*^-16}, {
             5.901460823357528, -1.1102230246251565`*^-16}, {
             5.903531071953718, -5.551115123125783*^-17}, {
             5.905601320549907, -1.6653345369377348`*^-16}, {
             5.907671569146097, -5.551115123125783*^-17}, {
             5.9094686828176695`, -4.891975408147437*^-16}}], 
            
            Line[{{2.7603073193573557`, -4.891975408147437*^-16}, {
             2.7610894076824213`, -4.440892098500626*^-16}, {
             2.7630143125663063`, 0.}, {
             2.7649392174501912`, -3.885780586188048*^-16}, {
             2.766864122334076, -3.3306690738754696`*^-16}, {
             2.768789027217961, -3.3306690738754696`*^-16}, {
             2.770713932101846, 1.1102230246251565`*^-16}, {2.772638836985731,
              2.220446049250313*^-16}, {2.7745637418696165`, 
             5.551115123125783*^-17}, {2.776488646753502, 
             2.220446049250313*^-16}, {2.778413551637387, 
             5.551115123125783*^-17}, {2.780338456521272, 
             1.1102230246251565`*^-16}, {
             2.7818251154847706`, -4.891975408147437*^-16}}], 
            
            Line[{{2.782821128940194, -4.891975408147437*^-16}, {
             2.784188266289042, -5.551115123125783*^-17}, {
             2.7856921173727742`, -4.891975408147437*^-16}}]}, 
           "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 2 Pi}, {-4.891975408147437*^-16, 
            5.551115123125783*^-16}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, 2 Pi}, {-4.891975408147437*^-16, 
           5.551115123125783*^-16}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]], 
         Line[CompressedData["
1:eJxNl3k01Xkfx6/Jct3qli1bxFWNSpFk/ckSieqGCYncbOF6wpUl0R0UsjwG
k6wJj61EF5ex/MauKYz0UJYswwxJaCY3spR5nnP6fT/zO+ee33md9/vz/iy/
v66ii6+1+zckEmnyf7//v/dl0VwbLQQNb/R+Jm/NbcHjbPbMTJ8RNCR9faRi
InYOWhFcgmvM6kTV2xPcjFue+TCf7UxwAR4r5trkzCI4Fy8KklU2CSG4Hm8d
6kvaG0FwLW65Wa1DMgryxrCEFXIswY/wf/nMHFxNIDgdX71v4vIuieAi7Niy
fsrhVIJr8Ai6VmtwxlcOr8DbC9U+/HyP4Aac/HkfjT//KxtyMIkL2yZ3VhH1
0Zia+LAz/SXB4dhV777kO0MEV+I1rd0tw6Owz6r0k78UJglOwvVZTYoe04ix
8Ke1VmWzsF/7rsqIxQWCObhQcGmFziK6L2bRUzDx/TLkJ+7JEXmyRjAXexGW
ZrSFJITuK96fxLLmJzgdO38gLi+djBjPirz5YmwLweHY2FAY3x4R8NMOBx32
liCYRHK/7etcIU0wFy8Z90xeloN+c5ouLfo0YP+pc4qd+4HDjXUnJvWAM9f5
ncWdCC7Be/0yLwXng37P+5SGWysw8/K6kNUkML+j0+P9NDKaT8eM9mU0D/iZ
qU6JYbYwumdhRYbOZCkF6cw1h/2DjykoT81UXranioL8+GD+el0DcN9GaVNy
F9Tz0RtNjd4hHXuSFq6p9R70hAnjbw8uonzM+oCAlNIy9JMK/IUsvQY81hi7
Qt0ALiCfnuXftBnlM62pr1cFNyNdNbu3608KwSQSbyoFn6YiP16valM2Igp8
om0o8akM+C/OTlrl7gedplFofPcQ8MwNjyMJ6uAv/2Xf7khN0ANE5sSv6cJ8
ug7lAj7HYD5Sod+SqzHo8dofB85aQF5dtJDThhcwu/cZ/eMVYBOZBIN3LIJr
MYobXW0iEPJ7y7YrDoQgxt70S/9RHgv6I/mR/oJ/Q39/z5yOzGTI/7JGK47O
AL+EkgrT6QHqhyelxNs+KIN9Kd+8M+ZVQL8oloWqQQ3kkSYeyMbVA4daCpNf
NkL+UpMnb1cb6HM53/5a3QW6BzWmjtQL/SZvTBee6gcedCxkT4yA/7tufm+V
CeAePTe74CmCm3Hz0rbjrW9Bb5dRUtu6APcwiIvcef4D7FO/MkH+zxLc+6iX
0cf5VZSHcQZzJ7Q3YP7su/I/um3fgjhAVGapQR34fUTIpKAWMPOvwR4rPYJz
8alL2g3ZBqBf6k0rfnOcYA52OlHCXswG+TEligjODAb/f/nIkdI48EJZhpNl
M+QLXzigF9MOumElncfrBr3cJfVy7yjkx7fRTsVsgN8kSl/8o/FWxNXkq0W9
zwjm4CoS25kuHVTE7xOXxI+82obylWJiVH2Z21H95IXXw8ZvgE9O9a1U+4gg
vubv7rljnuBcjF6TZbEjSBTxwjozbNOSKPLbnz+1b2WZYA7WXnXg1cIK6BnM
OdXhz6geNxm88jtHQAxxVpWfhZMEYuwkM0iqTgO4qsO2o1xTDOXLK2r5F2gj
xm+HSe7K1CWYRFocWO76AQPOMQ35/rIJsHCevYrjCegfsK4zZHWS4Fp8zE4m
2swC/OZVq+r6p4G51Nfj6vR/zMNsSFC2hLzYjiwdeWvw8xTCpsXOoXyMEeb4
o7At1HcOYIYbdrCPxhG5eZ491N9P/Jwx6wB+yuzoid8u/mN+08bFlwzwj+fm
5HY5w/0s1tlnWlxhv2o7xmqNO7BClUHxIw+oj6cqnMv3Al7yIvGle0O/vIEI
rs9VqJ/uUBtPDIT5Vbjjwo+DoZ6Vn6jxPAT0miR9xvtQ0NfZc7Hb2JBndCWL
qxoOerf5irDfLaj/1ODHYKXCPMce7opLToN9b6b3cCsyQKcGqlA+3IM8pUMz
XP8iYHougxLwE/CdROrRO3Vw76GwnxncBtDd7GWreU3AIaIDjMCnwAW36NVB
QzDPqqf+pZA1mEfuc7ID67o40qfN4jvJ/BLE/ljb3m4D+XgJpDPJRfyKwjtQ
/k+5u/Xbkgl+gPXoYR3WIpKoPq42cO2EGMEc3Ozo48N6EgQ3Y/yVMx6qkpIo
v/kQLUdJGjF+o9ShX1IW8nSVUylb5AgmkaoUycE8BfD75RiVzdCAVWRDfx/Z
jfpjb9O40i/2Qr8i8YWzHcqQly7Ur3xXDdjm1lZGnDr4RfnMUtkaoMev1vF5
aMN+7Pn7w1qG0N+1zzth6CywgmVh669WkDfSPfap5TvIyzCXUq2xAd32iZX7
Qzt0L1z0eHxWjj30e97U/iLFAfwJ2BehmIuQd7JO61goA+4toMkK8HUGf2vl
w4euruBnq/7xm507+PUeyUme9oB+n5Ttzhh6AXMLk25qeMN+LFpnnfIVyDt0
f9OfO31h/llZ/b0iLPgexelBjgJX4fu6SXBSVgJgPoWUt0/ngyB/lKq0MXEN
+fHMeMejr66Dbku+690ZBvViUc/zGtmwTy+f8GBlOMyXwDamFkfCfOZroSZZ
t2A+wWvV13+Ihn6tvAXOzdvQb7dPVcnBOEn0f/BvjV6xKw==
          "]], 
         Line[CompressedData["
1:eJxF0A0slHEcB/DHKbJ1eUnebjqukVpvVok8xHaplXR0FyldXdHkJRlh5Vhy
1yy5KEUnruWqhbnrlJc/UW55yZKOdEcxmZaXWDJ57WX9n9+zPXv22ff38v8/
9oJzAaE0giC4f96/326F+4RFlaVXcvv8MnpRAzqhZFsNVlt6Ef+eIjTd4PtG
vxZbQma946ayXmCXIMf+Y9u8G8C146e/8l9hV5JcIkoqVGOr0IhxPKfgNfYz
lMZMXoKaYb7N5vRKbSvMU3pmRv5qg/P0hRRoXDqwU1FCVPFVngabIFYkl5Jx
XdhyJL9WMZ7djV2BPKS1DxRa7HqkeaIOau/BRiiypm3590/YiUi/tbOe3o/N
Qfna3rgNA9iliBu4ehVrEjsGDYc5NntNYd8nL1/YlMyfhvvbiFychTPYUqS4
5TkonYPz7S32yatZwFaiPpXfAS1h9d8PUELjYb1fNOxH5ArN8QrLpVROFg+E
hbsYYksQ+SPalmcEjjBLSc+mYxeRNJbYTWGMTRD5zlmjb02h3tn7tmxsJfYd
solTyKNbYNehs42DdYZW2EpEd93gRLOB+eVPYm/MMajzogBm1cyULeybzF48
NcGEfbkGPm3D9lCvG+0o7HOg5iHhSWsj3Vrot+vkx3aug/7TaITdshFbhcYy
DL493Q79kgXfQ2U7oH9rbA565AZOPGKXVeAB82hOO7eJd1MmV6mjhME8qK90
VQ1xA2FfcMkM5+AR6L+XI17DDoF6J4GsaWModjlJLmrM9OIhF7iRDx/ehP8X
Ptr2sycX8hgZn22WB/dJ5E1k77kLeYpRWv+lAmo+EtWab1EWQn79vFw4JANL
PzYzAuTgrqRAydxz8L7q2CR/Hezzj17SJOoFB7FyLdBnOO+ZjKqnjl+g/0ow
MTY7Aq6byRTIF6BfXcZU6AhrKn8jUCya6FtTua5FI71oiF2OpvMZHzgm4EW/
UgeRGfQb6O+KqzGncpL+vP3luAXk5hECU0draj7JYE7yjzIgZ71PL5PYgteL
LefVTKh3dn+8f9Ye8t/wPGeE
          "]], 
         Line[{{5.910970924903065, -4.891975408147437*^-16}, {
          5.911812066338477, -4.440892098500626*^-16}, {
          5.913882314934667, -2.7755575615628914`*^-16}, {
          5.922163309319426, -2.7755575615628914`*^-16}, {
          5.924233557915616, -1.1102230246251565`*^-16}, {5.926303806511806, 
          1.6653345369377348`*^-16}, {
          5.928374055107996, -2.7755575615628914`*^-16}, {
          5.9299526608398745`, -4.891975408147437*^-16}}], 
         Line[{{5.892597550966447, -4.891975408147437*^-16}, {
          5.893179828972768, -3.3306690738754696`*^-16}, {5.895250077568958, 
          1.1102230246251565`*^-16}, {5.897320326165148, 
          5.551115123125783*^-16}, {
          5.8993905747613375`, -3.3306690738754696`*^-16}, {
          5.901460823357528, -1.1102230246251565`*^-16}, {
          5.903531071953718, -5.551115123125783*^-17}, {
          5.905601320549907, -1.6653345369377348`*^-16}, {
          5.907671569146097, -5.551115123125783*^-17}, {
          5.9094686828176695`, -4.891975408147437*^-16}}], 
         Line[{{2.7603073193573557`, -4.891975408147437*^-16}, {
          2.7610894076824213`, -4.440892098500626*^-16}, {2.7630143125663063`,
           0.}, {2.7649392174501912`, -3.885780586188048*^-16}, {
          2.766864122334076, -3.3306690738754696`*^-16}, {
          2.768789027217961, -3.3306690738754696`*^-16}, {2.770713932101846, 
          1.1102230246251565`*^-16}, {2.772638836985731, 
          2.220446049250313*^-16}, {2.7745637418696165`, 
          5.551115123125783*^-17}, {2.776488646753502, 
          2.220446049250313*^-16}, {2.778413551637387, 
          5.551115123125783*^-17}, {2.780338456521272, 
          1.1102230246251565`*^-16}, {
          2.7818251154847706`, -4.891975408147437*^-16}}], 
         Line[{{2.782821128940194, -4.891975408147437*^-16}, {
          2.784188266289042, -5.551115123125783*^-17}, {
          2.7856921173727742`, -4.891975408147437*^-16}}]}, 
        "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, 2 Pi}, {-4.891975408147437*^-16, 
         5.551115123125783*^-16}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-4.891975408147437*^-16, 5.551115123125783*^-16}}, {{
     0, 6.283185307179586}, {-4.891975408147437*^-16, 
     5.551115123125783*^-16}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.919750509568882*^9, 3.919750521521681*^9}, 
   3.920521803168182*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"7f0a8a4d-84e7-4668-8933-f1c3ff570274"]
}, Open  ]],

Cell["Yes, gives identical results!", "Text",
 CellChangeTimes->{{3.919750306724846*^9, 3.9197503685782127`*^9}, {
  3.9197505597986803`*^9, 
  3.919750564266843*^9}},ExpressionUUID->"82215ad3-4765-4958-b8a6-\
5a47384c4349"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960, 745},
WindowMargins->{{224, Automatic}, {Automatic, 174}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8678f9e3-5e67-4ad5-bd74-ec04b0ed8e32"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 269, 4, 98, "Title",ExpressionUUID->"42a92a96-1e2f-4aec-8c75-2c8f43210c80"],
Cell[CellGroupData[{
Cell[874, 30, 259, 4, 67, "Section",ExpressionUUID->"b99182b9-81f5-4488-9035-d0acc2d526fe"],
Cell[1136, 36, 888, 15, 150, "Text",ExpressionUUID->"12a24928-93c8-4319-b8db-e5643c40fe9b"],
Cell[CellGroupData[{
Cell[2049, 55, 10637, 235, 402, "Input",ExpressionUUID->"3c1dcc09-971f-4a3e-884c-1116a03d8edc"],
Cell[12689, 292, 10054, 222, 809, "Output",ExpressionUUID->"35225d48-d9fc-4e6b-9180-e3021a2fac68"]
}, Open  ]],
Cell[22758, 517, 989, 17, 150, "Text",ExpressionUUID->"8c66bf35-d09e-4d0f-ba1c-3c8b164630cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23784, 539, 346, 5, 67, "Section",ExpressionUUID->"6581fe96-27e5-4f3d-81b8-c2e7585c0920"],
Cell[24133, 546, 2951, 61, 94, "Input",ExpressionUUID->"5b041a6d-29ce-4768-b988-3f160ebd2609"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27121, 612, 241, 4, 67, "Section",ExpressionUUID->"0706f6ba-f7b3-42db-b8f7-e0cdd6203688"],
Cell[CellGroupData[{
Cell[27387, 620, 1408, 22, 52, "Input",ExpressionUUID->"fbca896f-bf89-479a-8b8d-10024e0b8656"],
Cell[28798, 644, 871, 17, 81, "Output",ExpressionUUID->"7fbca1de-ab4b-4e62-a620-e5299e8c1cab"]
}, Open  ]],
Cell[29684, 664, 395, 9, 81, "Text",ExpressionUUID->"76b02164-8a04-417b-907d-ef92f506929e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30116, 678, 266, 6, 68, "Section",ExpressionUUID->"03d426f5-14a3-4d6c-85c1-0d11d3f64583"],
Cell[30385, 686, 541, 14, 73, "Input",ExpressionUUID->"c15eed5f-74cd-4ff4-9113-6c07029567df"],
Cell[CellGroupData[{
Cell[30951, 704, 2426, 61, 115, "Input",ExpressionUUID->"15352793-6016-4973-bf31-3003a8569bd4"],
Cell[33380, 767, 4087, 114, 152, "Output",ExpressionUUID->"73007d80-7bb5-4013-b2a9-b125b158b3a6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37516, 887, 172, 3, 67, "Section",ExpressionUUID->"b432c878-7b96-41c3-8d84-2b51dc0dacbe"],
Cell[37691, 892, 346, 7, 58, "Text",ExpressionUUID->"d6e4543c-6e5a-49af-9963-331fc15fac4d"],
Cell[38040, 901, 1577, 36, 94, "Input",ExpressionUUID->"bcdc6009-13ea-4aba-8b68-3b38100db850"],
Cell[39620, 939, 214, 5, 35, "Text",ExpressionUUID->"807c097f-82d5-41d7-b9e9-b52aa32b3702"],
Cell[39837, 946, 1533, 35, 73, "Input",ExpressionUUID->"ec9b2a99-304b-489a-854c-cc06ba38c445"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41407, 986, 220, 4, 67, "Section",ExpressionUUID->"acf2baf4-ca62-490b-9b17-7937030029e5"],
Cell[41630, 992, 649, 12, 127, "Text",ExpressionUUID->"e37920fe-2c98-4ac6-86b2-77d5b4a7cd2d"],
Cell[42282, 1006, 1417, 29, 52, "Input",ExpressionUUID->"7699ecf7-0ad8-4c79-b9f4-cae80629a43d"],
Cell[43702, 1037, 1232, 25, 52, "Input",ExpressionUUID->"bda02cce-7292-457b-a895-dc171ab1b33e"],
Cell[44937, 1064, 700, 19, 30, "Input",ExpressionUUID->"79950649-e9c6-43d6-b7bd-b91f297161ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45674, 1088, 224, 4, 67, "Section",ExpressionUUID->"0816d9d5-9c83-4d65-b65d-ca320a0ed0d4"],
Cell[45901, 1094, 701, 15, 196, "Text",ExpressionUUID->"b9f05653-4c81-4b7a-b895-eed01d3e8592"],
Cell[46605, 1111, 1734, 41, 136, "Input",ExpressionUUID->"69ba8641-8a86-4d51-8bf2-327024c7aa16"],
Cell[48342, 1154, 776, 13, 58, "Text",ExpressionUUID->"252d248a-820c-4c0c-b844-6038a64c7818"],
Cell[49121, 1169, 298, 4, 30, "Input",ExpressionUUID->"a4205349-0a19-4102-9a72-e0144fca8736"],
Cell[CellGroupData[{
Cell[49444, 1177, 446, 9, 30, "Input",ExpressionUUID->"beec0113-d15f-435e-978a-9c52d6e2f992"],
Cell[49893, 1188, 484, 9, 34, "Output",ExpressionUUID->"3112b1e8-9622-40f3-a9ff-09efbdcc013e"]
}, Open  ]],
Cell[50392, 1200, 557, 10, 35, "Text",ExpressionUUID->"983cf44c-5bb8-4474-8115-29cf48c53d50"],
Cell[50952, 1212, 1544, 38, 136, "Input",ExpressionUUID->"a7bd4da9-cd0a-432e-9e4b-3c9f7bf5ca81"],
Cell[52499, 1252, 594, 8, 35, "Text",ExpressionUUID->"5875fda7-26d0-4e69-99c4-6e86e4c58106"],
Cell[CellGroupData[{
Cell[53118, 1264, 409, 9, 30, "Input",ExpressionUUID->"c83a1356-8d43-4812-9a32-dda24bb5097f"],
Cell[53530, 1275, 707, 11, 34, "Output",ExpressionUUID->"7c910fb9-d64c-4315-9dd7-92796d8e217f"]
}, Open  ]],
Cell[54252, 1289, 609, 10, 35, "Text",ExpressionUUID->"0903cf72-41df-4095-bdb6-2ea8ea662724"],
Cell[54864, 1301, 628, 11, 30, "Input",ExpressionUUID->"fdf6c730-5af3-48f3-9e3e-b87dc4674800"],
Cell[55495, 1314, 743, 12, 58, "Text",ExpressionUUID->"6d287704-63f9-4a78-a464-d6bdd8105c19"],
Cell[56241, 1328, 838, 22, 73, "Input",ExpressionUUID->"a79de922-93a6-4c94-be25-7a39675d9f5d"],
Cell[CellGroupData[{
Cell[57104, 1354, 392, 8, 30, "Input",ExpressionUUID->"11dc11a5-e99e-4cd9-931b-f01c7e01df4f"],
Cell[57499, 1364, 58490, 1013, 235, "Output",ExpressionUUID->"a1fad8d0-c115-44c2-a564-19208e331171"]
}, Open  ]],
Cell[116004, 2380, 773, 13, 35, "Text",ExpressionUUID->"ba8226a4-d734-4eac-8060-8270f0f06f37"],
Cell[CellGroupData[{
Cell[116802, 2397, 879, 16, 30, "Input",ExpressionUUID->"3e3ef01b-984f-4794-84d1-f0034246d121"],
Cell[117684, 2415, 1046, 20, 28, "Message",ExpressionUUID->"f33ba054-5097-4ab1-9fdb-ca067da99b3a"],
Cell[118733, 2437, 1174, 24, 34, "Output",ExpressionUUID->"c4fca6e7-197c-468e-8a0d-677ccc92968c"]
}, Open  ]],
Cell[119922, 2464, 763, 13, 58, "Text",ExpressionUUID->"a93d9984-ee77-48d4-88d2-a565c994bb89"],
Cell[CellGroupData[{
Cell[120710, 2481, 848, 15, 73, "Input",ExpressionUUID->"df5e2e97-893f-439e-82f0-4f78f1deb469"],
Cell[121561, 2498, 836, 14, 34, "Output",ExpressionUUID->"b83af004-8ae9-4c8e-b21a-a2c5c81de39b"],
Cell[122400, 2514, 841, 14, 34, "Output",ExpressionUUID->"6622d050-c49b-492c-9a17-064c7bdf40d8"],
Cell[123244, 2530, 883, 15, 37, "Output",ExpressionUUID->"77535128-d70e-4d2c-8549-4fee7dbeac53"]
}, Open  ]],
Cell[124142, 2548, 610, 10, 35, "Text",ExpressionUUID->"0a0ddadc-d659-4f63-8ae0-df18fe4e1614"],
Cell[CellGroupData[{
Cell[124777, 2562, 550, 11, 30, "Input",ExpressionUUID->"2b4bfa63-6715-4d18-97c7-50eb4ef75bf2"],
Cell[125330, 2575, 817, 12, 34, "Output",ExpressionUUID->"6f445075-b34d-49fc-8a4f-dff94602d019"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126184, 2592, 597, 13, 30, "Input",ExpressionUUID->"96a66f9c-68e5-4fd7-8025-c3a1b39fec38"],
Cell[126784, 2607, 691, 9, 34, "Output",ExpressionUUID->"ceb25205-bf1e-4a6f-940d-33154576bbab"]
}, Open  ]],
Cell[127490, 2619, 578, 8, 35, "Text",ExpressionUUID->"70471a5f-0745-481e-9438-73d8a4899028"],
Cell[128071, 2629, 221, 3, 30, "Input",ExpressionUUID->"dd53bbcc-8590-4b84-8132-6ba205ec6e6b"],
Cell[CellGroupData[{
Cell[128317, 2636, 257, 4, 30, "Input",ExpressionUUID->"5ace15cc-3407-4f68-ae02-424ec43d2dc9"],
Cell[128577, 2642, 279, 4, 34, "Output",ExpressionUUID->"3b24cdbc-fe42-45c8-9e3e-016da6ff4f1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128893, 2651, 238, 4, 30, "Input",ExpressionUUID->"5af9c351-01f9-45f9-9917-3b2b404125b4"],
Cell[129134, 2657, 424, 9, 34, "Output",ExpressionUUID->"130cefd8-2bbd-42a4-8ab4-ecda1101b794"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129595, 2671, 240, 4, 30, "Input",ExpressionUUID->"44c5b006-5311-437f-9f31-791fdad5e038"],
Cell[129838, 2677, 292, 4, 34, "Output",ExpressionUUID->"3831021d-12ee-4e03-ad58-70689328a88f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130167, 2686, 175, 2, 30, "Input",ExpressionUUID->"74b54bc0-6ebf-4649-aca5-fa2a303a3d73"],
Cell[130345, 2690, 355, 7, 34, "Output",ExpressionUUID->"4c881250-0dd1-4f91-a81b-8c03a4caf0e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130737, 2702, 310, 7, 30, "Input",ExpressionUUID->"22510faf-bf65-436c-be51-b24dbd384dc8"],
Cell[131050, 2711, 289, 4, 34, "Output",ExpressionUUID->"e7c257ed-eba9-4335-af41-7615a8fa67d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131376, 2720, 494, 12, 30, "Input",ExpressionUUID->"ef3b0437-4df8-49a9-a3ff-073b03be8e1e"],
Cell[131873, 2734, 352, 5, 34, "Output",ExpressionUUID->"c8506b90-00c6-445f-b38c-da9a9c23fe61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132262, 2744, 235, 4, 30, "Input",ExpressionUUID->"2905229a-c571-4c15-a297-0ba00bc1c9af"],
Cell[132500, 2750, 358, 8, 53, "Output",ExpressionUUID->"69e136a5-ec84-4d55-822a-c05709cefc2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132895, 2763, 564, 15, 52, "Input",ExpressionUUID->"5a223ca5-b629-4493-a999-c65bcaa2000a"],
Cell[133462, 2780, 220, 3, 34, "Output",ExpressionUUID->"63f13a48-b465-4733-8cd0-0821c8055682"],
Cell[133685, 2785, 219, 3, 34, "Output",ExpressionUUID->"1dba0e22-678c-4f0a-804a-b5434250b9b0"]
}, Open  ]],
Cell[133919, 2791, 171, 2, 30, "Input",ExpressionUUID->"c7fd9abb-431f-4cf9-b3fb-7b4b1f6fa3f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134127, 2798, 274, 4, 67, "Section",ExpressionUUID->"5730f75c-560f-4821-95a7-3ad8a1bbceb3"],
Cell[134404, 2804, 314, 8, 81, "Text",ExpressionUUID->"106ba7f1-cf81-41ea-883d-949ec3217dfb"],
Cell[134721, 2814, 807, 24, 73, "Input",ExpressionUUID->"4527b343-5768-4ebc-a299-efff0e867d8c"],
Cell[CellGroupData[{
Cell[135553, 2842, 362, 7, 30, "Input",ExpressionUUID->"163924bb-964e-4f1f-a864-b526598f0650"],
Cell[135918, 2851, 863, 15, 28, "Message",ExpressionUUID->"6fc5159d-db7a-4231-9af4-642e7307ba38"],
Cell[136784, 2868, 317, 7, 34, "Output",ExpressionUUID->"249dce2e-a511-45b8-a9d0-12a95c2778bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137138, 2880, 383, 9, 30, "Input",ExpressionUUID->"33dc5c9f-d96b-40ea-9373-d6700ac34091"],
Cell[137524, 2891, 31320, 571, 219, "Output",ExpressionUUID->"7f0a8a4d-84e7-4668-8933-f1c3ff570274"]
}, Open  ]],
Cell[168859, 3465, 224, 4, 35, "Text",ExpressionUUID->"82215ad3-4765-4958-b8a6-5a47384c4349"]
}, Open  ]]
}, Open  ]]
}
]
*)

